from abc import ABC
from pyjapt import ShiftReduceParser
from cool.grammar import G


class CoolParser(ShiftReduceParser, ABC):
    def __init__(self, verbose=False):
        self.grammar = G
        self.verbose = verbose
        self.action = self.__action_table()
        self.goto = self.__goto_table()
        self._errors = []
        self.error_handler = G.parsing_error_handler if G.parsing_error_handler is not None else self.error 

    @staticmethod
    def __action_table():
        return {
            (0, G["class"]): ("SHIFT", 1),
            (1, G["type"]): ("SHIFT", 2),
            (2, G["inherits"]): ("SHIFT", 146),
            (2, G["{"]): ("SHIFT", 3),
            (3, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (3, G["id"]): ("SHIFT", 4),
            (4, G["("]): ("SHIFT", 5),
            (4, G[":"]): ("SHIFT", 130),
            (5, G["id"]): ("SHIFT", 118),
            (5, G[")"]): ("SHIFT", 6),
            (6, G[":"]): ("SHIFT", 7),
            (7, G["type"]): ("SHIFT", 8),
            (8, G["{"]): ("SHIFT", 9),
            (9, G["new"]): ("SHIFT", 22),
            (9, G["{"]): ("SHIFT", 10),
            (9, G["id"]): ("SHIFT", 43),
            (9, G["let"]): ("SHIFT", 14),
            (9, G["while"]): ("SHIFT", 13),
            (9, G["true"]): ("SHIFT", 25),
            (9, G["isvoid"]): ("SHIFT", 24),
            (9, G["string"]): ("SHIFT", 32),
            (9, G["false"]): ("SHIFT", 26),
            (9, G["not"]): ("SHIFT", 30),
            (9, G["if"]): ("SHIFT", 12),
            (9, G["~"]): ("SHIFT", 27),
            (9, G["("]): ("SHIFT", 11),
            (9, G["int"]): ("SHIFT", 31),
            (9, G["case"]): ("SHIFT", 21),
            (10, G["id"]): ("SHIFT", 43),
            (10, G["if"]): ("SHIFT", 12),
            (10, G["int"]): ("SHIFT", 31),
            (10, G["("]): ("SHIFT", 11),
            (10, G["{"]): ("SHIFT", 10),
            (10, G["let"]): ("SHIFT", 14),
            (10, G["while"]): ("SHIFT", 13),
            (10, G["isvoid"]): ("SHIFT", 24),
            (10, G["not"]): ("SHIFT", 30),
            (10, G["new"]): ("SHIFT", 22),
            (10, G["true"]): ("SHIFT", 25),
            (10, G["~"]): ("SHIFT", 27),
            (10, G["string"]): ("SHIFT", 32),
            (10, G["false"]): ("SHIFT", 26),
            (10, G["case"]): ("SHIFT", 21),
            (11, G["case"]): ("SHIFT", 21),
            (11, G["id"]): ("SHIFT", 43),
            (11, G["("]): ("SHIFT", 11),
            (11, G["int"]): ("SHIFT", 31),
            (11, G["{"]): ("SHIFT", 10),
            (11, G["let"]): ("SHIFT", 14),
            (11, G["new"]): ("SHIFT", 22),
            (11, G["while"]): ("SHIFT", 13),
            (11, G["isvoid"]): ("SHIFT", 24),
            (11, G["true"]): ("SHIFT", 25),
            (11, G["string"]): ("SHIFT", 32),
            (11, G["false"]): ("SHIFT", 26),
            (11, G["not"]): ("SHIFT", 30),
            (11, G["~"]): ("SHIFT", 27),
            (11, G["if"]): ("SHIFT", 12),
            (12, G["("]): ("SHIFT", 11),
            (12, G["case"]): ("SHIFT", 21),
            (12, G["int"]): ("SHIFT", 31),
            (12, G["id"]): ("SHIFT", 43),
            (12, G["~"]): ("SHIFT", 27),
            (12, G["new"]): ("SHIFT", 22),
            (12, G["{"]): ("SHIFT", 10),
            (12, G["let"]): ("SHIFT", 14),
            (12, G["not"]): ("SHIFT", 30),
            (12, G["while"]): ("SHIFT", 13),
            (12, G["true"]): ("SHIFT", 25),
            (12, G["string"]): ("SHIFT", 32),
            (12, G["false"]): ("SHIFT", 26),
            (12, G["isvoid"]): ("SHIFT", 24),
            (12, G["if"]): ("SHIFT", 12),
            (13, G["id"]): ("SHIFT", 43),
            (13, G["new"]): ("SHIFT", 22),
            (13, G["not"]): ("SHIFT", 30),
            (13, G["true"]): ("SHIFT", 25),
            (13, G["isvoid"]): ("SHIFT", 24),
            (13, G["string"]): ("SHIFT", 32),
            (13, G["false"]): ("SHIFT", 26),
            (13, G["case"]): ("SHIFT", 21),
            (13, G["if"]): ("SHIFT", 12),
            (13, G["~"]): ("SHIFT", 27),
            (13, G["int"]): ("SHIFT", 31),
            (13, G["{"]): ("SHIFT", 10),
            (13, G["("]): ("SHIFT", 11),
            (13, G["let"]): ("SHIFT", 14),
            (13, G["while"]): ("SHIFT", 13),
            (14, G["id"]): ("SHIFT", 15),
            (15, G[":"]): ("SHIFT", 16),
            (16, G["type"]): ("SHIFT", 17),
            (17, G[","]): ("SHIFT", 18),
            (17, G["<-"]): ("SHIFT", 20),
            (17, G["in"]): ("REDUCE", G["declaration-list -> id : type"]),
            (18, G["id"]): ("SHIFT", 15),
            (19, G["in"]): ("REDUCE", G["declaration-list -> id : type , declaration-list"]),
            (20, G["string"]): ("SHIFT", 32),
            (20, G["{"]): ("SHIFT", 10),
            (20, G["false"]): ("SHIFT", 26),
            (20, G["id"]): ("SHIFT", 43),
            (20, G["let"]): ("SHIFT", 14),
            (20, G["if"]): ("SHIFT", 12),
            (20, G["while"]): ("SHIFT", 13),
            (20, G["("]): ("SHIFT", 11),
            (20, G["int"]): ("SHIFT", 31),
            (20, G["not"]): ("SHIFT", 30),
            (20, G["~"]): ("SHIFT", 27),
            (20, G["new"]): ("SHIFT", 22),
            (20, G["isvoid"]): ("SHIFT", 24),
            (20, G["case"]): ("SHIFT", 21),
            (20, G["true"]): ("SHIFT", 25),
            (21, G["isvoid"]): ("SHIFT", 24),
            (21, G["not"]): ("SHIFT", 30),
            (21, G["true"]): ("SHIFT", 25),
            (21, G["case"]): ("SHIFT", 21),
            (21, G["id"]): ("SHIFT", 43),
            (21, G["string"]): ("SHIFT", 32),
            (21, G["false"]): ("SHIFT", 26),
            (21, G["~"]): ("SHIFT", 27),
            (21, G["if"]): ("SHIFT", 12),
            (21, G["{"]): ("SHIFT", 10),
            (21, G["let"]): ("SHIFT", 14),
            (21, G["int"]): ("SHIFT", 31),
            (21, G["("]): ("SHIFT", 11),
            (21, G["while"]): ("SHIFT", 13),
            (21, G["new"]): ("SHIFT", 22),
            (22, G["type"]): ("SHIFT", 23),
            (23, G["-"]): ("REDUCE", G["atom -> new type"]),
            (23, G["in"]): ("REDUCE", G["atom -> new type"]),
            (23, G["error"]): ("REDUCE", G["atom -> new type"]),
            (23, G["*"]): ("REDUCE", G["atom -> new type"]),
            (23, G["}"]): ("REDUCE", G["atom -> new type"]),
            (23, G["/"]): ("REDUCE", G["atom -> new type"]),
            (23, G["of"]): ("REDUCE", G["atom -> new type"]),
            (23, G["<"]): ("REDUCE", G["atom -> new type"]),
            (23, G[")"]): ("REDUCE", G["atom -> new type"]),
            (23, G["<="]): ("REDUCE", G["atom -> new type"]),
            (23, G["then"]): ("REDUCE", G["atom -> new type"]),
            (23, G["."]): ("REDUCE", G["atom -> new type"]),
            (23, G["="]): ("REDUCE", G["atom -> new type"]),
            (23, G["else"]): ("REDUCE", G["atom -> new type"]),
            (23, G[","]): ("REDUCE", G["atom -> new type"]),
            (23, G["fi"]): ("REDUCE", G["atom -> new type"]),
            (23, G[";"]): ("REDUCE", G["atom -> new type"]),
            (23, G["loop"]): ("REDUCE", G["atom -> new type"]),
            (23, G["@"]): ("REDUCE", G["atom -> new type"]),
            (23, G["pool"]): ("REDUCE", G["atom -> new type"]),
            (23, G["+"]): ("REDUCE", G["atom -> new type"]),
            (24, G["~"]): ("SHIFT", 27),
            (24, G["("]): ("SHIFT", 11),
            (24, G["true"]): ("SHIFT", 25),
            (24, G["int"]): ("SHIFT", 31),
            (24, G["isvoid"]): ("SHIFT", 24),
            (24, G["string"]): ("SHIFT", 32),
            (24, G["false"]): ("SHIFT", 26),
            (24, G["id"]): ("SHIFT", 28),
            (24, G["new"]): ("SHIFT", 22),
            (24, G["if"]): ("SHIFT", 12),
            (25, G["-"]): ("REDUCE", G["atom -> true"]),
            (25, G["in"]): ("REDUCE", G["atom -> true"]),
            (25, G["*"]): ("REDUCE", G["atom -> true"]),
            (25, G["}"]): ("REDUCE", G["atom -> true"]),
            (25, G["/"]): ("REDUCE", G["atom -> true"]),
            (25, G["of"]): ("REDUCE", G["atom -> true"]),
            (25, G["<"]): ("REDUCE", G["atom -> true"]),
            (25, G[")"]): ("REDUCE", G["atom -> true"]),
            (25, G["<="]): ("REDUCE", G["atom -> true"]),
            (25, G["then"]): ("REDUCE", G["atom -> true"]),
            (25, G["."]): ("REDUCE", G["atom -> true"]),
            (25, G["="]): ("REDUCE", G["atom -> true"]),
            (25, G["else"]): ("REDUCE", G["atom -> true"]),
            (25, G[","]): ("REDUCE", G["atom -> true"]),
            (25, G["+"]): ("REDUCE", G["atom -> true"]),
            (25, G["fi"]): ("REDUCE", G["atom -> true"]),
            (25, G[";"]): ("REDUCE", G["atom -> true"]),
            (25, G["loop"]): ("REDUCE", G["atom -> true"]),
            (25, G["@"]): ("REDUCE", G["atom -> true"]),
            (25, G["pool"]): ("REDUCE", G["atom -> true"]),
            (25, G["error"]): ("REDUCE", G["atom -> true"]),
            (26, G["-"]): ("REDUCE", G["atom -> false"]),
            (26, G["in"]): ("REDUCE", G["atom -> false"]),
            (26, G["*"]): ("REDUCE", G["atom -> false"]),
            (26, G["}"]): ("REDUCE", G["atom -> false"]),
            (26, G["/"]): ("REDUCE", G["atom -> false"]),
            (26, G["of"]): ("REDUCE", G["atom -> false"]),
            (26, G["<"]): ("REDUCE", G["atom -> false"]),
            (26, G[")"]): ("REDUCE", G["atom -> false"]),
            (26, G["<="]): ("REDUCE", G["atom -> false"]),
            (26, G["then"]): ("REDUCE", G["atom -> false"]),
            (26, G["."]): ("REDUCE", G["atom -> false"]),
            (26, G["="]): ("REDUCE", G["atom -> false"]),
            (26, G["else"]): ("REDUCE", G["atom -> false"]),
            (26, G[","]): ("REDUCE", G["atom -> false"]),
            (26, G["+"]): ("REDUCE", G["atom -> false"]),
            (26, G["fi"]): ("REDUCE", G["atom -> false"]),
            (26, G[";"]): ("REDUCE", G["atom -> false"]),
            (26, G["loop"]): ("REDUCE", G["atom -> false"]),
            (26, G["@"]): ("REDUCE", G["atom -> false"]),
            (26, G["pool"]): ("REDUCE", G["atom -> false"]),
            (26, G["error"]): ("REDUCE", G["atom -> false"]),
            (27, G["~"]): ("SHIFT", 27),
            (27, G["("]): ("SHIFT", 11),
            (27, G["true"]): ("SHIFT", 25),
            (27, G["int"]): ("SHIFT", 31),
            (27, G["isvoid"]): ("SHIFT", 24),
            (27, G["string"]): ("SHIFT", 32),
            (27, G["false"]): ("SHIFT", 26),
            (27, G["id"]): ("SHIFT", 28),
            (27, G["new"]): ("SHIFT", 22),
            (27, G["if"]): ("SHIFT", 12),
            (28, G["("]): ("SHIFT", 29),
            (28, G["-"]): ("REDUCE", G["atom -> id"]),
            (28, G["in"]): ("REDUCE", G["atom -> id"]),
            (28, G["*"]): ("REDUCE", G["atom -> id"]),
            (28, G["}"]): ("REDUCE", G["atom -> id"]),
            (28, G["/"]): ("REDUCE", G["atom -> id"]),
            (28, G["of"]): ("REDUCE", G["atom -> id"]),
            (28, G["<"]): ("REDUCE", G["atom -> id"]),
            (28, G[")"]): ("REDUCE", G["atom -> id"]),
            (28, G["<="]): ("REDUCE", G["atom -> id"]),
            (28, G["then"]): ("REDUCE", G["atom -> id"]),
            (28, G["."]): ("REDUCE", G["atom -> id"]),
            (28, G["="]): ("REDUCE", G["atom -> id"]),
            (28, G["else"]): ("REDUCE", G["atom -> id"]),
            (28, G[","]): ("REDUCE", G["atom -> id"]),
            (28, G["+"]): ("REDUCE", G["atom -> id"]),
            (28, G["fi"]): ("REDUCE", G["atom -> id"]),
            (28, G[";"]): ("REDUCE", G["atom -> id"]),
            (28, G["loop"]): ("REDUCE", G["atom -> id"]),
            (28, G["@"]): ("REDUCE", G["atom -> id"]),
            (28, G["pool"]): ("REDUCE", G["atom -> id"]),
            (28, G["error"]): ("REDUCE", G["atom -> id"]),
            (29, G["~"]): ("SHIFT", 27),
            (29, G["if"]): ("SHIFT", 12),
            (29, G["int"]): ("SHIFT", 31),
            (29, G["("]): ("SHIFT", 11),
            (29, G["case"]): ("SHIFT", 21),
            (29, G["id"]): ("SHIFT", 43),
            (29, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (29, G["new"]): ("SHIFT", 22),
            (29, G["{"]): ("SHIFT", 10),
            (29, G["let"]): ("SHIFT", 14),
            (29, G["isvoid"]): ("SHIFT", 24),
            (29, G["while"]): ("SHIFT", 13),
            (29, G["true"]): ("SHIFT", 25),
            (29, G["not"]): ("SHIFT", 30),
            (29, G["string"]): ("SHIFT", 32),
            (29, G["false"]): ("SHIFT", 26),
            (30, G["~"]): ("SHIFT", 27),
            (30, G["("]): ("SHIFT", 11),
            (30, G["true"]): ("SHIFT", 25),
            (30, G["int"]): ("SHIFT", 31),
            (30, G["isvoid"]): ("SHIFT", 24),
            (30, G["string"]): ("SHIFT", 32),
            (30, G["false"]): ("SHIFT", 26),
            (30, G["id"]): ("SHIFT", 28),
            (30, G["new"]): ("SHIFT", 22),
            (30, G["if"]): ("SHIFT", 12),
            (31, G["-"]): ("REDUCE", G["atom -> int"]),
            (31, G["in"]): ("REDUCE", G["atom -> int"]),
            (31, G["*"]): ("REDUCE", G["atom -> int"]),
            (31, G["}"]): ("REDUCE", G["atom -> int"]),
            (31, G["/"]): ("REDUCE", G["atom -> int"]),
            (31, G["of"]): ("REDUCE", G["atom -> int"]),
            (31, G["<"]): ("REDUCE", G["atom -> int"]),
            (31, G[")"]): ("REDUCE", G["atom -> int"]),
            (31, G["<="]): ("REDUCE", G["atom -> int"]),
            (31, G["then"]): ("REDUCE", G["atom -> int"]),
            (31, G["."]): ("REDUCE", G["atom -> int"]),
            (31, G["="]): ("REDUCE", G["atom -> int"]),
            (31, G["else"]): ("REDUCE", G["atom -> int"]),
            (31, G[","]): ("REDUCE", G["atom -> int"]),
            (31, G["+"]): ("REDUCE", G["atom -> int"]),
            (31, G["fi"]): ("REDUCE", G["atom -> int"]),
            (31, G[";"]): ("REDUCE", G["atom -> int"]),
            (31, G["loop"]): ("REDUCE", G["atom -> int"]),
            (31, G["@"]): ("REDUCE", G["atom -> int"]),
            (31, G["pool"]): ("REDUCE", G["atom -> int"]),
            (31, G["error"]): ("REDUCE", G["atom -> int"]),
            (32, G["-"]): ("REDUCE", G["atom -> string"]),
            (32, G["in"]): ("REDUCE", G["atom -> string"]),
            (32, G["*"]): ("REDUCE", G["atom -> string"]),
            (32, G["}"]): ("REDUCE", G["atom -> string"]),
            (32, G["/"]): ("REDUCE", G["atom -> string"]),
            (32, G["of"]): ("REDUCE", G["atom -> string"]),
            (32, G["<"]): ("REDUCE", G["atom -> string"]),
            (32, G[")"]): ("REDUCE", G["atom -> string"]),
            (32, G["<="]): ("REDUCE", G["atom -> string"]),
            (32, G["then"]): ("REDUCE", G["atom -> string"]),
            (32, G["."]): ("REDUCE", G["atom -> string"]),
            (32, G["="]): ("REDUCE", G["atom -> string"]),
            (32, G["else"]): ("REDUCE", G["atom -> string"]),
            (32, G[","]): ("REDUCE", G["atom -> string"]),
            (32, G["+"]): ("REDUCE", G["atom -> string"]),
            (32, G["fi"]): ("REDUCE", G["atom -> string"]),
            (32, G[";"]): ("REDUCE", G["atom -> string"]),
            (32, G["loop"]): ("REDUCE", G["atom -> string"]),
            (32, G["@"]): ("REDUCE", G["atom -> string"]),
            (32, G["pool"]): ("REDUCE", G["atom -> string"]),
            (32, G["error"]): ("REDUCE", G["atom -> string"]),
            (33, G["-"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["in"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["*"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["}"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["/"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["of"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["<"]): ("REDUCE", G["atom -> function-call"]),
            (33, G[")"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["<="]): ("REDUCE", G["atom -> function-call"]),
            (33, G["then"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["."]): ("REDUCE", G["atom -> function-call"]),
            (33, G["="]): ("REDUCE", G["atom -> function-call"]),
            (33, G["else"]): ("REDUCE", G["atom -> function-call"]),
            (33, G[","]): ("REDUCE", G["atom -> function-call"]),
            (33, G["+"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["fi"]): ("REDUCE", G["atom -> function-call"]),
            (33, G[";"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["loop"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["@"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["pool"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["error"]): ("REDUCE", G["atom -> function-call"]),
            (34, G["+"]): ("SHIFT", 35),
            (34, G["-"]): ("SHIFT", 51),
            (34, G["else"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["then"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["in"]): ("REDUCE", G["negable -> not arith"]),
            (34, G[","]): ("REDUCE", G["negable -> not arith"]),
            (34, G["fi"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["}"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["of"]): ("REDUCE", G["negable -> not arith"]),
            (34, G[";"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["<"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["loop"]): ("REDUCE", G["negable -> not arith"]),
            (34, G[")"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["pool"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["error"]): ("REDUCE", G["negable -> not arith"]),
            (34, G["<="]): ("REDUCE", G["negable -> not arith"]),
            (34, G["="]): ("REDUCE", G["negable -> not arith"]),
            (35, G["~"]): ("SHIFT", 27),
            (35, G["("]): ("SHIFT", 11),
            (35, G["true"]): ("SHIFT", 25),
            (35, G["int"]): ("SHIFT", 31),
            (35, G["isvoid"]): ("SHIFT", 24),
            (35, G["string"]): ("SHIFT", 32),
            (35, G["false"]): ("SHIFT", 26),
            (35, G["id"]): ("SHIFT", 28),
            (35, G["new"]): ("SHIFT", 22),
            (35, G["if"]): ("SHIFT", 12),
            (36, G["/"]): ("SHIFT", 53),
            (36, G["-"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["in"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["error"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["}"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["of"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["<"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G[")"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["<="]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["then"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["="]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["else"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G[","]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["fi"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G[";"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["loop"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["pool"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["+"]): ("REDUCE", G["arith -> arith + term"]),
            (36, G["*"]): ("SHIFT", 37),
            (37, G["~"]): ("SHIFT", 27),
            (37, G["("]): ("SHIFT", 11),
            (37, G["true"]): ("SHIFT", 25),
            (37, G["int"]): ("SHIFT", 31),
            (37, G["isvoid"]): ("SHIFT", 24),
            (37, G["string"]): ("SHIFT", 32),
            (37, G["false"]): ("SHIFT", 26),
            (37, G["id"]): ("SHIFT", 28),
            (37, G["new"]): ("SHIFT", 22),
            (37, G["if"]): ("SHIFT", 12),
            (38, G["-"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["in"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["*"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["}"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["/"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["of"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["<"]): ("REDUCE", G["term -> term * factor"]),
            (38, G[")"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["<="]): ("REDUCE", G["term -> term * factor"]),
            (38, G["then"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["="]): ("REDUCE", G["term -> term * factor"]),
            (38, G["else"]): ("REDUCE", G["term -> term * factor"]),
            (38, G[","]): ("REDUCE", G["term -> term * factor"]),
            (38, G["+"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["fi"]): ("REDUCE", G["term -> term * factor"]),
            (38, G[";"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["loop"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["pool"]): ("REDUCE", G["term -> term * factor"]),
            (38, G["error"]): ("REDUCE", G["term -> term * factor"]),
            (39, G["."]): ("SHIFT", 40),
            (39, G["@"]): ("SHIFT", 67),
            (39, G["-"]): ("REDUCE", G["factor -> atom"]),
            (39, G["in"]): ("REDUCE", G["factor -> atom"]),
            (39, G["error"]): ("REDUCE", G["factor -> atom"]),
            (39, G["*"]): ("REDUCE", G["factor -> atom"]),
            (39, G["}"]): ("REDUCE", G["factor -> atom"]),
            (39, G["/"]): ("REDUCE", G["factor -> atom"]),
            (39, G["of"]): ("REDUCE", G["factor -> atom"]),
            (39, G["<"]): ("REDUCE", G["factor -> atom"]),
            (39, G[")"]): ("REDUCE", G["factor -> atom"]),
            (39, G["<="]): ("REDUCE", G["factor -> atom"]),
            (39, G["then"]): ("REDUCE", G["factor -> atom"]),
            (39, G["="]): ("REDUCE", G["factor -> atom"]),
            (39, G["else"]): ("REDUCE", G["factor -> atom"]),
            (39, G[","]): ("REDUCE", G["factor -> atom"]),
            (39, G["fi"]): ("REDUCE", G["factor -> atom"]),
            (39, G[";"]): ("REDUCE", G["factor -> atom"]),
            (39, G["loop"]): ("REDUCE", G["factor -> atom"]),
            (39, G["pool"]): ("REDUCE", G["factor -> atom"]),
            (39, G["+"]): ("REDUCE", G["factor -> atom"]),
            (40, G["id"]): ("SHIFT", 41),
            (41, G["("]): ("SHIFT", 42),
            (42, G["~"]): ("SHIFT", 27),
            (42, G["if"]): ("SHIFT", 12),
            (42, G["int"]): ("SHIFT", 31),
            (42, G["("]): ("SHIFT", 11),
            (42, G["case"]): ("SHIFT", 21),
            (42, G["id"]): ("SHIFT", 43),
            (42, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (42, G["new"]): ("SHIFT", 22),
            (42, G["{"]): ("SHIFT", 10),
            (42, G["let"]): ("SHIFT", 14),
            (42, G["isvoid"]): ("SHIFT", 24),
            (42, G["while"]): ("SHIFT", 13),
            (42, G["true"]): ("SHIFT", 25),
            (42, G["not"]): ("SHIFT", 30),
            (42, G["string"]): ("SHIFT", 32),
            (42, G["false"]): ("SHIFT", 26),
            (43, G["<-"]): ("SHIFT", 44),
            (43, G["("]): ("SHIFT", 29),
            (43, G["-"]): ("REDUCE", G["atom -> id"]),
            (43, G["in"]): ("REDUCE", G["atom -> id"]),
            (43, G["*"]): ("REDUCE", G["atom -> id"]),
            (43, G["}"]): ("REDUCE", G["atom -> id"]),
            (43, G["/"]): ("REDUCE", G["atom -> id"]),
            (43, G["of"]): ("REDUCE", G["atom -> id"]),
            (43, G["<"]): ("REDUCE", G["atom -> id"]),
            (43, G[")"]): ("REDUCE", G["atom -> id"]),
            (43, G["<="]): ("REDUCE", G["atom -> id"]),
            (43, G["then"]): ("REDUCE", G["atom -> id"]),
            (43, G["."]): ("REDUCE", G["atom -> id"]),
            (43, G["="]): ("REDUCE", G["atom -> id"]),
            (43, G["else"]): ("REDUCE", G["atom -> id"]),
            (43, G[","]): ("REDUCE", G["atom -> id"]),
            (43, G["+"]): ("REDUCE", G["atom -> id"]),
            (43, G["fi"]): ("REDUCE", G["atom -> id"]),
            (43, G[";"]): ("REDUCE", G["atom -> id"]),
            (43, G["loop"]): ("REDUCE", G["atom -> id"]),
            (43, G["@"]): ("REDUCE", G["atom -> id"]),
            (43, G["pool"]): ("REDUCE", G["atom -> id"]),
            (43, G["error"]): ("REDUCE", G["atom -> id"]),
            (44, G["case"]): ("SHIFT", 21),
            (44, G["~"]): ("SHIFT", 27),
            (44, G["id"]): ("SHIFT", 43),
            (44, G["("]): ("SHIFT", 11),
            (44, G["int"]): ("SHIFT", 31),
            (44, G["{"]): ("SHIFT", 10),
            (44, G["let"]): ("SHIFT", 14),
            (44, G["new"]): ("SHIFT", 22),
            (44, G["while"]): ("SHIFT", 13),
            (44, G["true"]): ("SHIFT", 25),
            (44, G["isvoid"]): ("SHIFT", 24),
            (44, G["string"]): ("SHIFT", 32),
            (44, G["false"]): ("SHIFT", 26),
            (44, G["not"]): ("SHIFT", 30),
            (44, G["if"]): ("SHIFT", 12),
            (45, G["else"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G["then"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G[","]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G["in"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G["fi"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G["}"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G[";"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G["of"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G["loop"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G[")"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G["error"]): ("REDUCE", G["expr -> id <- expr"]),
            (45, G["pool"]): ("REDUCE", G["expr -> id <- expr"]),
            (46, G["else"]): ("REDUCE", G["expr -> comp"]),
            (46, G["then"]): ("REDUCE", G["expr -> comp"]),
            (46, G[","]): ("REDUCE", G["expr -> comp"]),
            (46, G["in"]): ("REDUCE", G["expr -> comp"]),
            (46, G["fi"]): ("REDUCE", G["expr -> comp"]),
            (46, G["}"]): ("REDUCE", G["expr -> comp"]),
            (46, G[";"]): ("REDUCE", G["expr -> comp"]),
            (46, G["of"]): ("REDUCE", G["expr -> comp"]),
            (46, G["loop"]): ("REDUCE", G["expr -> comp"]),
            (46, G[")"]): ("REDUCE", G["expr -> comp"]),
            (46, G["error"]): ("REDUCE", G["expr -> comp"]),
            (46, G["pool"]): ("REDUCE", G["expr -> comp"]),
            (47, G["<"]): ("SHIFT", 48),
            (47, G["="]): ("SHIFT", 59),
            (47, G["else"]): ("REDUCE", G["comp -> negable"]),
            (47, G["then"]): ("REDUCE", G["comp -> negable"]),
            (47, G[","]): ("REDUCE", G["comp -> negable"]),
            (47, G["in"]): ("REDUCE", G["comp -> negable"]),
            (47, G["fi"]): ("REDUCE", G["comp -> negable"]),
            (47, G["}"]): ("REDUCE", G["comp -> negable"]),
            (47, G[";"]): ("REDUCE", G["comp -> negable"]),
            (47, G["of"]): ("REDUCE", G["comp -> negable"]),
            (47, G["loop"]): ("REDUCE", G["comp -> negable"]),
            (47, G[")"]): ("REDUCE", G["comp -> negable"]),
            (47, G["error"]): ("REDUCE", G["comp -> negable"]),
            (47, G["pool"]): ("REDUCE", G["comp -> negable"]),
            (47, G["<="]): ("SHIFT", 57),
            (48, G["false"]): ("SHIFT", 26),
            (48, G["isvoid"]): ("SHIFT", 24),
            (48, G["new"]): ("SHIFT", 22),
            (48, G["id"]): ("SHIFT", 28),
            (48, G["not"]): ("SHIFT", 30),
            (48, G["if"]): ("SHIFT", 12),
            (48, G["true"]): ("SHIFT", 25),
            (48, G["("]): ("SHIFT", 11),
            (48, G["int"]): ("SHIFT", 31),
            (48, G["~"]): ("SHIFT", 27),
            (48, G["string"]): ("SHIFT", 32),
            (49, G["else"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G["then"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G[","]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G["in"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G["fi"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G["}"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G[";"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G["of"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G["loop"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G[")"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G["error"]): ("REDUCE", G["comp -> negable < negable"]),
            (49, G["pool"]): ("REDUCE", G["comp -> negable < negable"]),
            (50, G["-"]): ("SHIFT", 51),
            (50, G["+"]): ("SHIFT", 35),
            (50, G["else"]): ("REDUCE", G["negable -> arith"]),
            (50, G["pool"]): ("REDUCE", G["negable -> arith"]),
            (50, G["in"]): ("REDUCE", G["negable -> arith"]),
            (50, G[","]): ("REDUCE", G["negable -> arith"]),
            (50, G["fi"]): ("REDUCE", G["negable -> arith"]),
            (50, G["error"]): ("REDUCE", G["negable -> arith"]),
            (50, G["}"]): ("REDUCE", G["negable -> arith"]),
            (50, G["of"]): ("REDUCE", G["negable -> arith"]),
            (50, G[";"]): ("REDUCE", G["negable -> arith"]),
            (50, G["<"]): ("REDUCE", G["negable -> arith"]),
            (50, G["loop"]): ("REDUCE", G["negable -> arith"]),
            (50, G[")"]): ("REDUCE", G["negable -> arith"]),
            (50, G["then"]): ("REDUCE", G["negable -> arith"]),
            (50, G["<="]): ("REDUCE", G["negable -> arith"]),
            (50, G["="]): ("REDUCE", G["negable -> arith"]),
            (51, G["~"]): ("SHIFT", 27),
            (51, G["("]): ("SHIFT", 11),
            (51, G["true"]): ("SHIFT", 25),
            (51, G["int"]): ("SHIFT", 31),
            (51, G["isvoid"]): ("SHIFT", 24),
            (51, G["string"]): ("SHIFT", 32),
            (51, G["false"]): ("SHIFT", 26),
            (51, G["id"]): ("SHIFT", 28),
            (51, G["new"]): ("SHIFT", 22),
            (51, G["if"]): ("SHIFT", 12),
            (52, G["/"]): ("SHIFT", 53),
            (52, G["*"]): ("SHIFT", 37),
            (52, G["-"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["in"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["error"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["}"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["of"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["<"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G[")"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["<="]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["then"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["="]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["else"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G[","]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["fi"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G[";"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["loop"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["pool"]): ("REDUCE", G["arith -> arith - term"]),
            (52, G["+"]): ("REDUCE", G["arith -> arith - term"]),
            (53, G["~"]): ("SHIFT", 27),
            (53, G["("]): ("SHIFT", 11),
            (53, G["true"]): ("SHIFT", 25),
            (53, G["int"]): ("SHIFT", 31),
            (53, G["isvoid"]): ("SHIFT", 24),
            (53, G["string"]): ("SHIFT", 32),
            (53, G["false"]): ("SHIFT", 26),
            (53, G["id"]): ("SHIFT", 28),
            (53, G["new"]): ("SHIFT", 22),
            (53, G["if"]): ("SHIFT", 12),
            (54, G["-"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["in"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["*"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["}"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["/"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["of"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["<"]): ("REDUCE", G["term -> term / factor"]),
            (54, G[")"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["<="]): ("REDUCE", G["term -> term / factor"]),
            (54, G["then"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["="]): ("REDUCE", G["term -> term / factor"]),
            (54, G["else"]): ("REDUCE", G["term -> term / factor"]),
            (54, G[","]): ("REDUCE", G["term -> term / factor"]),
            (54, G["+"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["fi"]): ("REDUCE", G["term -> term / factor"]),
            (54, G[";"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["loop"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["pool"]): ("REDUCE", G["term -> term / factor"]),
            (54, G["error"]): ("REDUCE", G["term -> term / factor"]),
            (55, G["-"]): ("REDUCE", G["term -> factor"]),
            (55, G["in"]): ("REDUCE", G["term -> factor"]),
            (55, G["error"]): ("REDUCE", G["term -> factor"]),
            (55, G["*"]): ("REDUCE", G["term -> factor"]),
            (55, G["}"]): ("REDUCE", G["term -> factor"]),
            (55, G["/"]): ("REDUCE", G["term -> factor"]),
            (55, G["of"]): ("REDUCE", G["term -> factor"]),
            (55, G["<"]): ("REDUCE", G["term -> factor"]),
            (55, G[")"]): ("REDUCE", G["term -> factor"]),
            (55, G["<="]): ("REDUCE", G["term -> factor"]),
            (55, G["then"]): ("REDUCE", G["term -> factor"]),
            (55, G["="]): ("REDUCE", G["term -> factor"]),
            (55, G["else"]): ("REDUCE", G["term -> factor"]),
            (55, G[","]): ("REDUCE", G["term -> factor"]),
            (55, G["fi"]): ("REDUCE", G["term -> factor"]),
            (55, G[";"]): ("REDUCE", G["term -> factor"]),
            (55, G["loop"]): ("REDUCE", G["term -> factor"]),
            (55, G["pool"]): ("REDUCE", G["term -> factor"]),
            (55, G["+"]): ("REDUCE", G["term -> factor"]),
            (56, G["/"]): ("SHIFT", 53),
            (56, G["*"]): ("SHIFT", 37),
            (56, G["-"]): ("REDUCE", G["arith -> term"]),
            (56, G["in"]): ("REDUCE", G["arith -> term"]),
            (56, G["error"]): ("REDUCE", G["arith -> term"]),
            (56, G["}"]): ("REDUCE", G["arith -> term"]),
            (56, G["of"]): ("REDUCE", G["arith -> term"]),
            (56, G["<"]): ("REDUCE", G["arith -> term"]),
            (56, G[")"]): ("REDUCE", G["arith -> term"]),
            (56, G["<="]): ("REDUCE", G["arith -> term"]),
            (56, G["then"]): ("REDUCE", G["arith -> term"]),
            (56, G["="]): ("REDUCE", G["arith -> term"]),
            (56, G["else"]): ("REDUCE", G["arith -> term"]),
            (56, G[","]): ("REDUCE", G["arith -> term"]),
            (56, G["fi"]): ("REDUCE", G["arith -> term"]),
            (56, G[";"]): ("REDUCE", G["arith -> term"]),
            (56, G["loop"]): ("REDUCE", G["arith -> term"]),
            (56, G["pool"]): ("REDUCE", G["arith -> term"]),
            (56, G["+"]): ("REDUCE", G["arith -> term"]),
            (57, G["false"]): ("SHIFT", 26),
            (57, G["isvoid"]): ("SHIFT", 24),
            (57, G["new"]): ("SHIFT", 22),
            (57, G["id"]): ("SHIFT", 28),
            (57, G["not"]): ("SHIFT", 30),
            (57, G["if"]): ("SHIFT", 12),
            (57, G["true"]): ("SHIFT", 25),
            (57, G["("]): ("SHIFT", 11),
            (57, G["int"]): ("SHIFT", 31),
            (57, G["~"]): ("SHIFT", 27),
            (57, G["string"]): ("SHIFT", 32),
            (58, G["else"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G["then"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G[","]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G["in"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G["fi"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G["}"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G[";"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G["of"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G["loop"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G[")"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G["error"]): ("REDUCE", G["comp -> negable <= negable"]),
            (58, G["pool"]): ("REDUCE", G["comp -> negable <= negable"]),
            (59, G["false"]): ("SHIFT", 26),
            (59, G["isvoid"]): ("SHIFT", 24),
            (59, G["new"]): ("SHIFT", 22),
            (59, G["id"]): ("SHIFT", 28),
            (59, G["not"]): ("SHIFT", 30),
            (59, G["if"]): ("SHIFT", 12),
            (59, G["true"]): ("SHIFT", 25),
            (59, G["("]): ("SHIFT", 11),
            (59, G["int"]): ("SHIFT", 31),
            (59, G["~"]): ("SHIFT", 27),
            (59, G["string"]): ("SHIFT", 32),
            (60, G["else"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G["then"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G[","]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G["in"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G["fi"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G["}"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G[";"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G["of"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G["loop"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G[")"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G["error"]): ("REDUCE", G["comp -> negable = negable"]),
            (60, G["pool"]): ("REDUCE", G["comp -> negable = negable"]),
            (61, G[")"]): ("SHIFT", 62),
            (62, G["-"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["in"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["error"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["*"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["}"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["/"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["of"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["<"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G[")"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["<="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["then"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["."]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["else"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G[","]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["fi"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G[";"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["loop"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["@"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["pool"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (62, G["+"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (63, G[")"]): ("REDUCE", G["expr-list -> not-empty-expr-list"]),
            (64, G[")"]): ("REDUCE", G["not-empty-expr-list -> expr"]),
            (64, G[","]): ("SHIFT", 65),
            (65, G["~"]): ("SHIFT", 27),
            (65, G["if"]): ("SHIFT", 12),
            (65, G["int"]): ("SHIFT", 31),
            (65, G["("]): ("SHIFT", 11),
            (65, G["case"]): ("SHIFT", 21),
            (65, G["id"]): ("SHIFT", 43),
            (65, G["new"]): ("SHIFT", 22),
            (65, G["{"]): ("SHIFT", 10),
            (65, G["let"]): ("SHIFT", 14),
            (65, G["isvoid"]): ("SHIFT", 24),
            (65, G["while"]): ("SHIFT", 13),
            (65, G["true"]): ("SHIFT", 25),
            (65, G["not"]): ("SHIFT", 30),
            (65, G["string"]): ("SHIFT", 32),
            (65, G["false"]): ("SHIFT", 26),
            (66, G[")"]): ("REDUCE", G["not-empty-expr-list -> expr , not-empty-expr-list"]),
            (67, G["type"]): ("SHIFT", 68),
            (68, G["."]): ("SHIFT", 69),
            (69, G["id"]): ("SHIFT", 70),
            (70, G["("]): ("SHIFT", 71),
            (71, G["~"]): ("SHIFT", 27),
            (71, G["if"]): ("SHIFT", 12),
            (71, G["int"]): ("SHIFT", 31),
            (71, G["("]): ("SHIFT", 11),
            (71, G["case"]): ("SHIFT", 21),
            (71, G["id"]): ("SHIFT", 43),
            (71, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (71, G["new"]): ("SHIFT", 22),
            (71, G["{"]): ("SHIFT", 10),
            (71, G["let"]): ("SHIFT", 14),
            (71, G["isvoid"]): ("SHIFT", 24),
            (71, G["while"]): ("SHIFT", 13),
            (71, G["true"]): ("SHIFT", 25),
            (71, G["not"]): ("SHIFT", 30),
            (71, G["string"]): ("SHIFT", 32),
            (71, G["false"]): ("SHIFT", 26),
            (72, G[")"]): ("SHIFT", 73),
            (73, G["-"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["in"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["error"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["*"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["}"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["/"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["of"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["<"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G[")"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["<="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["then"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["."]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["else"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G[","]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["fi"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G[";"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["loop"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["@"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["pool"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (73, G["+"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (74, G[")"]): ("SHIFT", 75),
            (75, G["-"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["in"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["error"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["*"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["}"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["/"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["of"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["<"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G[")"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["<="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["then"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["."]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["else"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G[","]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["fi"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G[";"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["loop"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["@"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["pool"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (75, G["+"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (76, G["-"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["in"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["*"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["}"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["/"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["of"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["<"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G[")"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["<="]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["then"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["="]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["else"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G[","]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["+"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["fi"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G[";"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["loop"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["pool"]): ("REDUCE", G["factor -> ~ factor"]),
            (76, G["error"]): ("REDUCE", G["factor -> ~ factor"]),
            (77, G["-"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["in"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["*"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["}"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["/"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["of"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["<"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G[")"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["<="]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["then"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["="]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["else"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G[","]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["+"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["fi"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G[";"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["loop"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["pool"]): ("REDUCE", G["factor -> isvoid factor"]),
            (77, G["error"]): ("REDUCE", G["factor -> isvoid factor"]),
            (78, G["of"]): ("SHIFT", 79),
            (79, G["id"]): ("SHIFT", 80),
            (80, G[":"]): ("SHIFT", 81),
            (81, G["type"]): ("SHIFT", 82),
            (82, G["=>"]): ("SHIFT", 83),
            (83, G["id"]): ("SHIFT", 43),
            (83, G["if"]): ("SHIFT", 12),
            (83, G["int"]): ("SHIFT", 31),
            (83, G["("]): ("SHIFT", 11),
            (83, G["{"]): ("SHIFT", 10),
            (83, G["let"]): ("SHIFT", 14),
            (83, G["while"]): ("SHIFT", 13),
            (83, G["isvoid"]): ("SHIFT", 24),
            (83, G["not"]): ("SHIFT", 30),
            (83, G["new"]): ("SHIFT", 22),
            (83, G["true"]): ("SHIFT", 25),
            (83, G["~"]): ("SHIFT", 27),
            (83, G["string"]): ("SHIFT", 32),
            (83, G["false"]): ("SHIFT", 26),
            (83, G["case"]): ("SHIFT", 21),
            (84, G[";"]): ("SHIFT", 85),
            (84, G["error"]): ("SHIFT", 87),
            (85, G["id"]): ("SHIFT", 80),
            (85, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ;"]),
            (86, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ; case-list"]),
            (87, G["id"]): ("SHIFT", 80),
            (87, G["esac"]): ("REDUCE", G["case-list -> id : type => expr error"]),
            (88, G["esac"]): ("REDUCE", G["case-list -> id : type => expr error case-list"]),
            (89, G["esac"]): ("SHIFT", 90),
            (90, G["else"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["then"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G[","]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["in"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["fi"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["}"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G[";"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["of"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["loop"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G[")"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["error"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (90, G["pool"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (91, G[","]): ("SHIFT", 92),
            (91, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr"]),
            (92, G["id"]): ("SHIFT", 15),
            (93, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr , declaration-list"]),
            (94, G["in"]): ("SHIFT", 95),
            (95, G["case"]): ("SHIFT", 21),
            (95, G["~"]): ("SHIFT", 27),
            (95, G["id"]): ("SHIFT", 43),
            (95, G["("]): ("SHIFT", 11),
            (95, G["int"]): ("SHIFT", 31),
            (95, G["{"]): ("SHIFT", 10),
            (95, G["let"]): ("SHIFT", 14),
            (95, G["new"]): ("SHIFT", 22),
            (95, G["while"]): ("SHIFT", 13),
            (95, G["true"]): ("SHIFT", 25),
            (95, G["isvoid"]): ("SHIFT", 24),
            (95, G["string"]): ("SHIFT", 32),
            (95, G["false"]): ("SHIFT", 26),
            (95, G["not"]): ("SHIFT", 30),
            (95, G["if"]): ("SHIFT", 12),
            (96, G["else"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G[","]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["in"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["fi"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["error"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["}"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G[";"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["of"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["loop"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G[")"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["then"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (96, G["pool"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (97, G["loop"]): ("SHIFT", 98),
            (98, G["~"]): ("SHIFT", 27),
            (98, G["if"]): ("SHIFT", 12),
            (98, G["not"]): ("SHIFT", 30),
            (98, G["("]): ("SHIFT", 11),
            (98, G["int"]): ("SHIFT", 31),
            (98, G["case"]): ("SHIFT", 21),
            (98, G["id"]): ("SHIFT", 43),
            (98, G["new"]): ("SHIFT", 22),
            (98, G["isvoid"]): ("SHIFT", 24),
            (98, G["true"]): ("SHIFT", 25),
            (98, G["{"]): ("SHIFT", 10),
            (98, G["let"]): ("SHIFT", 14),
            (98, G["while"]): ("SHIFT", 13),
            (98, G["string"]): ("SHIFT", 32),
            (98, G["false"]): ("SHIFT", 26),
            (99, G["pool"]): ("SHIFT", 100),
            (100, G["else"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["then"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G[","]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["in"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["fi"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["}"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G[";"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["of"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["loop"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G[")"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["error"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (100, G["pool"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (101, G["then"]): ("SHIFT", 102),
            (102, G["("]): ("SHIFT", 11),
            (102, G["int"]): ("SHIFT", 31),
            (102, G["while"]): ("SHIFT", 13),
            (102, G["not"]): ("SHIFT", 30),
            (102, G["new"]): ("SHIFT", 22),
            (102, G["~"]): ("SHIFT", 27),
            (102, G["id"]): ("SHIFT", 43),
            (102, G["true"]): ("SHIFT", 25),
            (102, G["case"]): ("SHIFT", 21),
            (102, G["string"]): ("SHIFT", 32),
            (102, G["false"]): ("SHIFT", 26),
            (102, G["if"]): ("SHIFT", 12),
            (102, G["{"]): ("SHIFT", 10),
            (102, G["isvoid"]): ("SHIFT", 24),
            (102, G["let"]): ("SHIFT", 14),
            (103, G["else"]): ("SHIFT", 104),
            (104, G["false"]): ("SHIFT", 26),
            (104, G["while"]): ("SHIFT", 13),
            (104, G["id"]): ("SHIFT", 43),
            (104, G["if"]): ("SHIFT", 12),
            (104, G["isvoid"]): ("SHIFT", 24),
            (104, G["int"]): ("SHIFT", 31),
            (104, G["("]): ("SHIFT", 11),
            (104, G["~"]): ("SHIFT", 27),
            (104, G["not"]): ("SHIFT", 30),
            (104, G["case"]): ("SHIFT", 21),
            (104, G["new"]): ("SHIFT", 22),
            (104, G["{"]): ("SHIFT", 10),
            (104, G["true"]): ("SHIFT", 25),
            (104, G["let"]): ("SHIFT", 14),
            (104, G["string"]): ("SHIFT", 32),
            (105, G["fi"]): ("SHIFT", 106),
            (106, G["-"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["in"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["*"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["}"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["/"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["of"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["<"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G[")"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["<="]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["then"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["."]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["="]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["else"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G[","]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["+"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["fi"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G[";"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["loop"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["@"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["pool"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (106, G["error"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (107, G[")"]): ("SHIFT", 108),
            (108, G["-"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["in"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["*"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["}"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["/"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["of"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["<"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G[")"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["<="]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["then"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["."]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["="]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["else"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G[","]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["+"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["fi"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G[";"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["loop"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["@"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["pool"]): ("REDUCE", G["atom -> ( expr )"]),
            (108, G["error"]): ("REDUCE", G["atom -> ( expr )"]),
            (109, G["}"]): ("SHIFT", 110),
            (110, G["else"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["then"]): ("REDUCE", G["expr -> { block }"]),
            (110, G[","]): ("REDUCE", G["expr -> { block }"]),
            (110, G["in"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["fi"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["}"]): ("REDUCE", G["expr -> { block }"]),
            (110, G[";"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["of"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["loop"]): ("REDUCE", G["expr -> { block }"]),
            (110, G[")"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["error"]): ("REDUCE", G["expr -> { block }"]),
            (110, G["pool"]): ("REDUCE", G["expr -> { block }"]),
            (111, G[";"]): ("SHIFT", 112),
            (111, G["error"]): ("SHIFT", 114),
            (112, G["id"]): ("SHIFT", 43),
            (112, G["if"]): ("SHIFT", 12),
            (112, G["int"]): ("SHIFT", 31),
            (112, G["("]): ("SHIFT", 11),
            (112, G["{"]): ("SHIFT", 10),
            (112, G["}"]): ("REDUCE", G["block -> expr ;"]),
            (112, G["let"]): ("SHIFT", 14),
            (112, G["while"]): ("SHIFT", 13),
            (112, G["isvoid"]): ("SHIFT", 24),
            (112, G["not"]): ("SHIFT", 30),
            (112, G["new"]): ("SHIFT", 22),
            (112, G["true"]): ("SHIFT", 25),
            (112, G["~"]): ("SHIFT", 27),
            (112, G["string"]): ("SHIFT", 32),
            (112, G["false"]): ("SHIFT", 26),
            (112, G["case"]): ("SHIFT", 21),
            (113, G["}"]): ("REDUCE", G["block -> expr ; block"]),
            (114, G["id"]): ("SHIFT", 43),
            (114, G["if"]): ("SHIFT", 12),
            (114, G["int"]): ("SHIFT", 31),
            (114, G["("]): ("SHIFT", 11),
            (114, G["{"]): ("SHIFT", 10),
            (114, G["let"]): ("SHIFT", 14),
            (114, G["}"]): ("REDUCE", G["block -> expr error"]),
            (114, G["while"]): ("SHIFT", 13),
            (114, G["isvoid"]): ("SHIFT", 24),
            (114, G["not"]): ("SHIFT", 30),
            (114, G["new"]): ("SHIFT", 22),
            (114, G["true"]): ("SHIFT", 25),
            (114, G["~"]): ("SHIFT", 27),
            (114, G["string"]): ("SHIFT", 32),
            (114, G["false"]): ("SHIFT", 26),
            (114, G["case"]): ("SHIFT", 21),
            (115, G["}"]): ("REDUCE", G["block -> expr error block"]),
            (116, G["}"]): ("SHIFT", 117),
            (117, G[";"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (117, G["error"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (118, G[":"]): ("SHIFT", 119),
            (119, G["type"]): ("SHIFT", 120),
            (120, G[","]): ("SHIFT", 121),
            (120, G[")"]): ("REDUCE", G["param-list -> id : type"]),
            (121, G["id"]): ("SHIFT", 118),
            (122, G[")"]): ("REDUCE", G["param-list -> id : type , param-list"]),
            (123, G[")"]): ("SHIFT", 124),
            (124, G[":"]): ("SHIFT", 125),
            (125, G["type"]): ("SHIFT", 126),
            (126, G["{"]): ("SHIFT", 127),
            (127, G["new"]): ("SHIFT", 22),
            (127, G["{"]): ("SHIFT", 10),
            (127, G["id"]): ("SHIFT", 43),
            (127, G["let"]): ("SHIFT", 14),
            (127, G["while"]): ("SHIFT", 13),
            (127, G["true"]): ("SHIFT", 25),
            (127, G["isvoid"]): ("SHIFT", 24),
            (127, G["string"]): ("SHIFT", 32),
            (127, G["false"]): ("SHIFT", 26),
            (127, G["not"]): ("SHIFT", 30),
            (127, G["if"]): ("SHIFT", 12),
            (127, G["~"]): ("SHIFT", 27),
            (127, G["("]): ("SHIFT", 11),
            (127, G["int"]): ("SHIFT", 31),
            (127, G["case"]): ("SHIFT", 21),
            (128, G["}"]): ("SHIFT", 129),
            (129, G[";"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (129, G["error"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (130, G["type"]): ("SHIFT", 131),
            (131, G[";"]): ("REDUCE", G["attribute -> id : type"]),
            (131, G["error"]): ("REDUCE", G["attribute -> id : type"]),
            (131, G["<-"]): ("SHIFT", 132),
            (132, G["id"]): ("SHIFT", 43),
            (132, G["if"]): ("SHIFT", 12),
            (132, G["int"]): ("SHIFT", 31),
            (132, G["("]): ("SHIFT", 11),
            (132, G["{"]): ("SHIFT", 10),
            (132, G["let"]): ("SHIFT", 14),
            (132, G["while"]): ("SHIFT", 13),
            (132, G["isvoid"]): ("SHIFT", 24),
            (132, G["not"]): ("SHIFT", 30),
            (132, G["new"]): ("SHIFT", 22),
            (132, G["true"]): ("SHIFT", 25),
            (132, G["~"]): ("SHIFT", 27),
            (132, G["string"]): ("SHIFT", 32),
            (132, G["false"]): ("SHIFT", 26),
            (132, G["case"]): ("SHIFT", 21),
            (133, G[";"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (133, G["error"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (134, G["}"]): ("SHIFT", 135),
            (135, G[";"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (136, G["error"]): ("SHIFT", 144),
            (136, G[";"]): ("SHIFT", 137),
            (137, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (137, G["id"]): ("SHIFT", 4),
            (138, G["}"]): ("REDUCE", G["feature-list -> attribute ; feature-list"]),
            (139, G["error"]): ("SHIFT", 142),
            (139, G[";"]): ("SHIFT", 140),
            (140, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (140, G["id"]): ("SHIFT", 4),
            (141, G["}"]): ("REDUCE", G["feature-list -> method ; feature-list"]),
            (142, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (142, G["id"]): ("SHIFT", 4),
            (143, G["}"]): ("REDUCE", G["feature-list -> method error feature-list"]),
            (144, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (144, G["id"]): ("SHIFT", 4),
            (145, G["}"]): ("REDUCE", G["feature-list -> attribute error feature-list"]),
            (146, G["type"]): ("SHIFT", 147),
            (147, G["{"]): ("SHIFT", 148),
            (148, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (148, G["id"]): ("SHIFT", 4),
            (149, G["}"]): ("SHIFT", 150),
            (150, G[";"]): ("REDUCE", G["class-def -> class type inherits type { feature-list }"]),
            (151, G["$"]): ("OK", None),
            (152, G["$"]): ("REDUCE", G["program -> class-list"]),
            (153, G[";"]): ("SHIFT", 154),
            (154, G["class"]): ("SHIFT", 1),
            (154, G["$"]): ("REDUCE", G["class-list -> class-def ;"]),
            (155, G["$"]): ("REDUCE", G["class-list -> class-def ; class-list"]),
        }

    @staticmethod
    def __goto_table():
        return {
            (0, G["class-def"]): 153,
            (0, G["program"]): 151,
            (0, G["class-list"]): 152,
            (3, G["method"]): 139,
            (3, G["attribute"]): 136,
            (3, G["feature-list"]): 134,
            (5, G["param-list"]): 123,
            (9, G["factor"]): 55,
            (9, G["term"]): 56,
            (9, G["comp"]): 46,
            (9, G["negable"]): 47,
            (9, G["function-call"]): 33,
            (9, G["atom"]): 39,
            (9, G["arith"]): 50,
            (9, G["expr"]): 116,
            (10, G["atom"]): 39,
            (10, G["factor"]): 55,
            (10, G["expr"]): 111,
            (10, G["comp"]): 46,
            (10, G["term"]): 56,
            (10, G["negable"]): 47,
            (10, G["arith"]): 50,
            (10, G["function-call"]): 33,
            (10, G["block"]): 109,
            (11, G["negable"]): 47,
            (11, G["arith"]): 50,
            (11, G["term"]): 56,
            (11, G["comp"]): 46,
            (11, G["factor"]): 55,
            (11, G["atom"]): 39,
            (11, G["expr"]): 107,
            (11, G["function-call"]): 33,
            (12, G["negable"]): 47,
            (12, G["atom"]): 39,
            (12, G["comp"]): 46,
            (12, G["term"]): 56,
            (12, G["arith"]): 50,
            (12, G["factor"]): 55,
            (12, G["expr"]): 101,
            (12, G["function-call"]): 33,
            (13, G["factor"]): 55,
            (13, G["negable"]): 47,
            (13, G["expr"]): 97,
            (13, G["term"]): 56,
            (13, G["function-call"]): 33,
            (13, G["arith"]): 50,
            (13, G["atom"]): 39,
            (13, G["comp"]): 46,
            (14, G["declaration-list"]): 94,
            (18, G["declaration-list"]): 19,
            (20, G["atom"]): 39,
            (20, G["comp"]): 46,
            (20, G["negable"]): 47,
            (20, G["factor"]): 55,
            (20, G["arith"]): 50,
            (20, G["term"]): 56,
            (20, G["expr"]): 91,
            (20, G["function-call"]): 33,
            (21, G["term"]): 56,
            (21, G["arith"]): 50,
            (21, G["function-call"]): 33,
            (21, G["negable"]): 47,
            (21, G["atom"]): 39,
            (21, G["comp"]): 46,
            (21, G["expr"]): 78,
            (21, G["factor"]): 55,
            (24, G["atom"]): 39,
            (24, G["factor"]): 77,
            (24, G["function-call"]): 33,
            (27, G["atom"]): 39,
            (27, G["function-call"]): 33,
            (27, G["factor"]): 76,
            (29, G["expr-list"]): 74,
            (29, G["atom"]): 39,
            (29, G["expr"]): 64,
            (29, G["not-empty-expr-list"]): 63,
            (29, G["negable"]): 47,
            (29, G["term"]): 56,
            (29, G["factor"]): 55,
            (29, G["arith"]): 50,
            (29, G["comp"]): 46,
            (29, G["function-call"]): 33,
            (30, G["atom"]): 39,
            (30, G["function-call"]): 33,
            (30, G["term"]): 56,
            (30, G["factor"]): 55,
            (30, G["arith"]): 34,
            (35, G["atom"]): 39,
            (35, G["function-call"]): 33,
            (35, G["term"]): 36,
            (35, G["factor"]): 55,
            (37, G["atom"]): 39,
            (37, G["function-call"]): 33,
            (37, G["factor"]): 38,
            (42, G["atom"]): 39,
            (42, G["expr"]): 64,
            (42, G["expr-list"]): 61,
            (42, G["not-empty-expr-list"]): 63,
            (42, G["negable"]): 47,
            (42, G["term"]): 56,
            (42, G["factor"]): 55,
            (42, G["arith"]): 50,
            (42, G["comp"]): 46,
            (42, G["function-call"]): 33,
            (44, G["atom"]): 39,
            (44, G["expr"]): 45,
            (44, G["comp"]): 46,
            (44, G["factor"]): 55,
            (44, G["negable"]): 47,
            (44, G["term"]): 56,
            (44, G["function-call"]): 33,
            (44, G["arith"]): 50,
            (48, G["term"]): 56,
            (48, G["atom"]): 39,
            (48, G["arith"]): 50,
            (48, G["factor"]): 55,
            (48, G["function-call"]): 33,
            (48, G["negable"]): 49,
            (51, G["atom"]): 39,
            (51, G["term"]): 52,
            (51, G["function-call"]): 33,
            (51, G["factor"]): 55,
            (53, G["atom"]): 39,
            (53, G["factor"]): 54,
            (53, G["function-call"]): 33,
            (57, G["term"]): 56,
            (57, G["atom"]): 39,
            (57, G["arith"]): 50,
            (57, G["negable"]): 58,
            (57, G["factor"]): 55,
            (57, G["function-call"]): 33,
            (59, G["term"]): 56,
            (59, G["negable"]): 60,
            (59, G["atom"]): 39,
            (59, G["arith"]): 50,
            (59, G["factor"]): 55,
            (59, G["function-call"]): 33,
            (65, G["atom"]): 39,
            (65, G["expr"]): 64,
            (65, G["not-empty-expr-list"]): 66,
            (65, G["negable"]): 47,
            (65, G["term"]): 56,
            (65, G["factor"]): 55,
            (65, G["arith"]): 50,
            (65, G["comp"]): 46,
            (65, G["function-call"]): 33,
            (71, G["atom"]): 39,
            (71, G["expr"]): 64,
            (71, G["not-empty-expr-list"]): 63,
            (71, G["negable"]): 47,
            (71, G["term"]): 56,
            (71, G["factor"]): 55,
            (71, G["arith"]): 50,
            (71, G["comp"]): 46,
            (71, G["function-call"]): 33,
            (71, G["expr-list"]): 72,
            (79, G["case-list"]): 89,
            (83, G["atom"]): 39,
            (83, G["expr"]): 84,
            (83, G["factor"]): 55,
            (83, G["comp"]): 46,
            (83, G["term"]): 56,
            (83, G["negable"]): 47,
            (83, G["arith"]): 50,
            (83, G["function-call"]): 33,
            (85, G["case-list"]): 86,
            (87, G["case-list"]): 88,
            (92, G["declaration-list"]): 93,
            (95, G["atom"]): 39,
            (95, G["comp"]): 46,
            (95, G["factor"]): 55,
            (95, G["negable"]): 47,
            (95, G["term"]): 56,
            (95, G["function-call"]): 33,
            (95, G["arith"]): 50,
            (95, G["expr"]): 96,
            (98, G["atom"]): 39,
            (98, G["expr"]): 99,
            (98, G["negable"]): 47,
            (98, G["arith"]): 50,
            (98, G["term"]): 56,
            (98, G["factor"]): 55,
            (98, G["comp"]): 46,
            (98, G["function-call"]): 33,
            (102, G["term"]): 56,
            (102, G["negable"]): 47,
            (102, G["atom"]): 39,
            (102, G["arith"]): 50,
            (102, G["expr"]): 103,
            (102, G["function-call"]): 33,
            (102, G["factor"]): 55,
            (102, G["comp"]): 46,
            (104, G["term"]): 56,
            (104, G["negable"]): 47,
            (104, G["atom"]): 39,
            (104, G["expr"]): 105,
            (104, G["arith"]): 50,
            (104, G["comp"]): 46,
            (104, G["function-call"]): 33,
            (104, G["factor"]): 55,
            (112, G["atom"]): 39,
            (112, G["factor"]): 55,
            (112, G["expr"]): 111,
            (112, G["comp"]): 46,
            (112, G["term"]): 56,
            (112, G["negable"]): 47,
            (112, G["block"]): 113,
            (112, G["arith"]): 50,
            (112, G["function-call"]): 33,
            (114, G["atom"]): 39,
            (114, G["factor"]): 55,
            (114, G["expr"]): 111,
            (114, G["comp"]): 46,
            (114, G["term"]): 56,
            (114, G["negable"]): 47,
            (114, G["arith"]): 50,
            (114, G["block"]): 115,
            (114, G["function-call"]): 33,
            (121, G["param-list"]): 122,
            (127, G["factor"]): 55,
            (127, G["term"]): 56,
            (127, G["comp"]): 46,
            (127, G["negable"]): 47,
            (127, G["function-call"]): 33,
            (127, G["atom"]): 39,
            (127, G["arith"]): 50,
            (127, G["expr"]): 128,
            (132, G["atom"]): 39,
            (132, G["factor"]): 55,
            (132, G["comp"]): 46,
            (132, G["expr"]): 133,
            (132, G["term"]): 56,
            (132, G["negable"]): 47,
            (132, G["arith"]): 50,
            (132, G["function-call"]): 33,
            (137, G["method"]): 139,
            (137, G["attribute"]): 136,
            (137, G["feature-list"]): 138,
            (140, G["method"]): 139,
            (140, G["attribute"]): 136,
            (140, G["feature-list"]): 141,
            (142, G["feature-list"]): 143,
            (142, G["method"]): 139,
            (142, G["attribute"]): 136,
            (144, G["method"]): 139,
            (144, G["attribute"]): 136,
            (144, G["feature-list"]): 145,
            (148, G["method"]): 139,
            (148, G["feature-list"]): 149,
            (148, G["attribute"]): 136,
            (154, G["class-def"]): 153,
            (154, G["class-list"]): 155,
        }
