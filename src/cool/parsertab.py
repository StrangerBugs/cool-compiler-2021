from abc import ABC
from pyjapt import ShiftReduceParser
from cool.grammar import G


class CoolParser(ShiftReduceParser, ABC):
    def __init__(self, verbose=False):
        self.grammar = G
        self.verbose = verbose
        self.action = self.__action_table()
        self.goto = self.__goto_table()
        self._errors = []
        self.error_handler = G.parsing_error_handler if G.parsing_error_handler is not None else self.error 

    @staticmethod
    def __action_table():
        return {
            (0, G["class"]): ("SHIFT", 1),
            (1, G["type"]): ("SHIFT", 2),
            (2, G["{"]): ("SHIFT", 3),
            (2, G["inherits"]): ("SHIFT", 152),
            (3, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (3, G["id"]): ("SHIFT", 4),
            (4, G[":"]): ("SHIFT", 136),
            (4, G["("]): ("SHIFT", 5),
            (5, G["id"]): ("SHIFT", 124),
            (5, G[")"]): ("SHIFT", 6),
            (6, G[":"]): ("SHIFT", 7),
            (7, G["type"]): ("SHIFT", 8),
            (8, G["{"]): ("SHIFT", 9),
            (9, G["true"]): ("SHIFT", 25),
            (9, G["case"]): ("SHIFT", 21),
            (9, G["not"]): ("SHIFT", 30),
            (9, G["while"]): ("SHIFT", 13),
            (9, G["false"]): ("SHIFT", 26),
            (9, G["id"]): ("SHIFT", 46),
            (9, G["string"]): ("SHIFT", 32),
            (9, G["("]): ("SHIFT", 11),
            (9, G["new"]): ("SHIFT", 22),
            (9, G["{"]): ("SHIFT", 10),
            (9, G["~"]): ("SHIFT", 27),
            (9, G["isvoid"]): ("SHIFT", 24),
            (9, G["if"]): ("SHIFT", 12),
            (9, G["int"]): ("SHIFT", 31),
            (9, G["let"]): ("SHIFT", 14),
            (10, G["id"]): ("SHIFT", 46),
            (10, G["("]): ("SHIFT", 11),
            (10, G["new"]): ("SHIFT", 22),
            (10, G["~"]): ("SHIFT", 27),
            (10, G["{"]): ("SHIFT", 10),
            (10, G["isvoid"]): ("SHIFT", 24),
            (10, G["if"]): ("SHIFT", 12),
            (10, G["true"]): ("SHIFT", 25),
            (10, G["int"]): ("SHIFT", 31),
            (10, G["let"]): ("SHIFT", 14),
            (10, G["not"]): ("SHIFT", 30),
            (10, G["case"]): ("SHIFT", 21),
            (10, G["while"]): ("SHIFT", 13),
            (10, G["false"]): ("SHIFT", 26),
            (10, G["string"]): ("SHIFT", 32),
            (11, G["("]): ("SHIFT", 11),
            (11, G["new"]): ("SHIFT", 22),
            (11, G["if"]): ("SHIFT", 12),
            (11, G["{"]): ("SHIFT", 10),
            (11, G["~"]): ("SHIFT", 27),
            (11, G["int"]): ("SHIFT", 31),
            (11, G["id"]): ("SHIFT", 46),
            (11, G["isvoid"]): ("SHIFT", 24),
            (11, G["true"]): ("SHIFT", 25),
            (11, G["let"]): ("SHIFT", 14),
            (11, G["false"]): ("SHIFT", 26),
            (11, G["not"]): ("SHIFT", 30),
            (11, G["case"]): ("SHIFT", 21),
            (11, G["string"]): ("SHIFT", 32),
            (11, G["while"]): ("SHIFT", 13),
            (12, G["string"]): ("SHIFT", 32),
            (12, G["{"]): ("SHIFT", 10),
            (12, G["~"]): ("SHIFT", 27),
            (12, G["id"]): ("SHIFT", 46),
            (12, G["("]): ("SHIFT", 11),
            (12, G["new"]): ("SHIFT", 22),
            (12, G["isvoid"]): ("SHIFT", 24),
            (12, G["let"]): ("SHIFT", 14),
            (12, G["if"]): ("SHIFT", 12),
            (12, G["int"]): ("SHIFT", 31),
            (12, G["not"]): ("SHIFT", 30),
            (12, G["case"]): ("SHIFT", 21),
            (12, G["true"]): ("SHIFT", 25),
            (12, G["while"]): ("SHIFT", 13),
            (12, G["false"]): ("SHIFT", 26),
            (13, G["while"]): ("SHIFT", 13),
            (13, G["true"]): ("SHIFT", 25),
            (13, G["int"]): ("SHIFT", 31),
            (13, G["false"]): ("SHIFT", 26),
            (13, G["{"]): ("SHIFT", 10),
            (13, G["id"]): ("SHIFT", 46),
            (13, G["string"]): ("SHIFT", 32),
            (13, G["new"]): ("SHIFT", 22),
            (13, G["~"]): ("SHIFT", 27),
            (13, G["("]): ("SHIFT", 11),
            (13, G["isvoid"]): ("SHIFT", 24),
            (13, G["let"]): ("SHIFT", 14),
            (13, G["if"]): ("SHIFT", 12),
            (13, G["case"]): ("SHIFT", 21),
            (13, G["not"]): ("SHIFT", 30),
            (14, G["id"]): ("SHIFT", 15),
            (15, G[":"]): ("SHIFT", 16),
            (16, G["type"]): ("SHIFT", 17),
            (17, G[","]): ("SHIFT", 18),
            (17, G["in"]): ("REDUCE", G["declaration-list -> id : type"]),
            (17, G["<-"]): ("SHIFT", 20),
            (18, G["id"]): ("SHIFT", 15),
            (19, G["in"]): ("REDUCE", G["declaration-list -> id : type , declaration-list"]),
            (20, G["if"]): ("SHIFT", 12),
            (20, G["id"]): ("SHIFT", 46),
            (20, G["int"]): ("SHIFT", 31),
            (20, G["true"]): ("SHIFT", 25),
            (20, G["~"]): ("SHIFT", 27),
            (20, G["let"]): ("SHIFT", 14),
            (20, G["isvoid"]): ("SHIFT", 24),
            (20, G["not"]): ("SHIFT", 30),
            (20, G["case"]): ("SHIFT", 21),
            (20, G["false"]): ("SHIFT", 26),
            (20, G["{"]): ("SHIFT", 10),
            (20, G["while"]): ("SHIFT", 13),
            (20, G["string"]): ("SHIFT", 32),
            (20, G["("]): ("SHIFT", 11),
            (20, G["new"]): ("SHIFT", 22),
            (21, G["string"]): ("SHIFT", 32),
            (21, G["id"]): ("SHIFT", 46),
            (21, G["new"]): ("SHIFT", 22),
            (21, G["("]): ("SHIFT", 11),
            (21, G["while"]): ("SHIFT", 13),
            (21, G["{"]): ("SHIFT", 10),
            (21, G["if"]): ("SHIFT", 12),
            (21, G["true"]): ("SHIFT", 25),
            (21, G["int"]): ("SHIFT", 31),
            (21, G["let"]): ("SHIFT", 14),
            (21, G["not"]): ("SHIFT", 30),
            (21, G["case"]): ("SHIFT", 21),
            (21, G["~"]): ("SHIFT", 27),
            (21, G["false"]): ("SHIFT", 26),
            (21, G["isvoid"]): ("SHIFT", 24),
            (22, G["type"]): ("SHIFT", 23),
            (23, G["."]): ("REDUCE", G["atom -> new type"]),
            (23, G["else"]): ("REDUCE", G["atom -> new type"]),
            (23, G["="]): ("REDUCE", G["atom -> new type"]),
            (23, G[","]): ("REDUCE", G["atom -> new type"]),
            (23, G["fi"]): ("REDUCE", G["atom -> new type"]),
            (23, G["error"]): ("REDUCE", G["atom -> new type"]),
            (23, G[";"]): ("REDUCE", G["atom -> new type"]),
            (23, G["loop"]): ("REDUCE", G["atom -> new type"]),
            (23, G["@"]): ("REDUCE", G["atom -> new type"]),
            (23, G["pool"]): ("REDUCE", G["atom -> new type"]),
            (23, G["+"]): ("REDUCE", G["atom -> new type"]),
            (23, G["-"]): ("REDUCE", G["atom -> new type"]),
            (23, G["in"]): ("REDUCE", G["atom -> new type"]),
            (23, G["*"]): ("REDUCE", G["atom -> new type"]),
            (23, G["}"]): ("REDUCE", G["atom -> new type"]),
            (23, G["/"]): ("REDUCE", G["atom -> new type"]),
            (23, G["of"]): ("REDUCE", G["atom -> new type"]),
            (23, G["<"]): ("REDUCE", G["atom -> new type"]),
            (23, G["<="]): ("REDUCE", G["atom -> new type"]),
            (23, G[")"]): ("REDUCE", G["atom -> new type"]),
            (23, G["then"]): ("REDUCE", G["atom -> new type"]),
            (24, G["false"]): ("SHIFT", 26),
            (24, G["if"]): ("SHIFT", 12),
            (24, G["id"]): ("SHIFT", 28),
            (24, G["string"]): ("SHIFT", 32),
            (24, G["true"]): ("SHIFT", 25),
            (24, G["int"]): ("SHIFT", 31),
            (24, G["("]): ("SHIFT", 11),
            (24, G["new"]): ("SHIFT", 22),
            (24, G["~"]): ("SHIFT", 27),
            (24, G["isvoid"]): ("SHIFT", 24),
            (25, G["."]): ("REDUCE", G["atom -> true"]),
            (25, G["else"]): ("REDUCE", G["atom -> true"]),
            (25, G["="]): ("REDUCE", G["atom -> true"]),
            (25, G[","]): ("REDUCE", G["atom -> true"]),
            (25, G["fi"]): ("REDUCE", G["atom -> true"]),
            (25, G["error"]): ("REDUCE", G["atom -> true"]),
            (25, G[";"]): ("REDUCE", G["atom -> true"]),
            (25, G["loop"]): ("REDUCE", G["atom -> true"]),
            (25, G["@"]): ("REDUCE", G["atom -> true"]),
            (25, G["pool"]): ("REDUCE", G["atom -> true"]),
            (25, G["+"]): ("REDUCE", G["atom -> true"]),
            (25, G["-"]): ("REDUCE", G["atom -> true"]),
            (25, G["in"]): ("REDUCE", G["atom -> true"]),
            (25, G["*"]): ("REDUCE", G["atom -> true"]),
            (25, G["}"]): ("REDUCE", G["atom -> true"]),
            (25, G["/"]): ("REDUCE", G["atom -> true"]),
            (25, G["of"]): ("REDUCE", G["atom -> true"]),
            (25, G["<"]): ("REDUCE", G["atom -> true"]),
            (25, G["<="]): ("REDUCE", G["atom -> true"]),
            (25, G[")"]): ("REDUCE", G["atom -> true"]),
            (25, G["then"]): ("REDUCE", G["atom -> true"]),
            (26, G["."]): ("REDUCE", G["atom -> false"]),
            (26, G["else"]): ("REDUCE", G["atom -> false"]),
            (26, G["="]): ("REDUCE", G["atom -> false"]),
            (26, G[","]): ("REDUCE", G["atom -> false"]),
            (26, G["fi"]): ("REDUCE", G["atom -> false"]),
            (26, G["error"]): ("REDUCE", G["atom -> false"]),
            (26, G[";"]): ("REDUCE", G["atom -> false"]),
            (26, G["loop"]): ("REDUCE", G["atom -> false"]),
            (26, G["@"]): ("REDUCE", G["atom -> false"]),
            (26, G["pool"]): ("REDUCE", G["atom -> false"]),
            (26, G["+"]): ("REDUCE", G["atom -> false"]),
            (26, G["-"]): ("REDUCE", G["atom -> false"]),
            (26, G["in"]): ("REDUCE", G["atom -> false"]),
            (26, G["*"]): ("REDUCE", G["atom -> false"]),
            (26, G["}"]): ("REDUCE", G["atom -> false"]),
            (26, G["/"]): ("REDUCE", G["atom -> false"]),
            (26, G["of"]): ("REDUCE", G["atom -> false"]),
            (26, G["<"]): ("REDUCE", G["atom -> false"]),
            (26, G["<="]): ("REDUCE", G["atom -> false"]),
            (26, G[")"]): ("REDUCE", G["atom -> false"]),
            (26, G["then"]): ("REDUCE", G["atom -> false"]),
            (27, G["false"]): ("SHIFT", 26),
            (27, G["if"]): ("SHIFT", 12),
            (27, G["id"]): ("SHIFT", 28),
            (27, G["string"]): ("SHIFT", 32),
            (27, G["true"]): ("SHIFT", 25),
            (27, G["int"]): ("SHIFT", 31),
            (27, G["("]): ("SHIFT", 11),
            (27, G["new"]): ("SHIFT", 22),
            (27, G["~"]): ("SHIFT", 27),
            (27, G["isvoid"]): ("SHIFT", 24),
            (28, G["("]): ("SHIFT", 29),
            (28, G["."]): ("REDUCE", G["atom -> id"]),
            (28, G["else"]): ("REDUCE", G["atom -> id"]),
            (28, G["="]): ("REDUCE", G["atom -> id"]),
            (28, G[","]): ("REDUCE", G["atom -> id"]),
            (28, G["fi"]): ("REDUCE", G["atom -> id"]),
            (28, G["error"]): ("REDUCE", G["atom -> id"]),
            (28, G[";"]): ("REDUCE", G["atom -> id"]),
            (28, G["loop"]): ("REDUCE", G["atom -> id"]),
            (28, G["@"]): ("REDUCE", G["atom -> id"]),
            (28, G["pool"]): ("REDUCE", G["atom -> id"]),
            (28, G["+"]): ("REDUCE", G["atom -> id"]),
            (28, G["-"]): ("REDUCE", G["atom -> id"]),
            (28, G["in"]): ("REDUCE", G["atom -> id"]),
            (28, G["*"]): ("REDUCE", G["atom -> id"]),
            (28, G["}"]): ("REDUCE", G["atom -> id"]),
            (28, G["/"]): ("REDUCE", G["atom -> id"]),
            (28, G["of"]): ("REDUCE", G["atom -> id"]),
            (28, G["<"]): ("REDUCE", G["atom -> id"]),
            (28, G["<="]): ("REDUCE", G["atom -> id"]),
            (28, G[")"]): ("REDUCE", G["atom -> id"]),
            (28, G["then"]): ("REDUCE", G["atom -> id"]),
            (29, G["string"]): ("SHIFT", 32),
            (29, G["id"]): ("SHIFT", 46),
            (29, G["("]): ("SHIFT", 11),
            (29, G["new"]): ("SHIFT", 22),
            (29, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (29, G["{"]): ("SHIFT", 10),
            (29, G["if"]): ("SHIFT", 12),
            (29, G["int"]): ("SHIFT", 31),
            (29, G["true"]): ("SHIFT", 25),
            (29, G["let"]): ("SHIFT", 14),
            (29, G["~"]): ("SHIFT", 27),
            (29, G["isvoid"]): ("SHIFT", 24),
            (29, G["while"]): ("SHIFT", 13),
            (29, G["case"]): ("SHIFT", 21),
            (29, G["not"]): ("SHIFT", 30),
            (29, G["false"]): ("SHIFT", 26),
            (30, G["false"]): ("SHIFT", 26),
            (30, G["if"]): ("SHIFT", 12),
            (30, G["id"]): ("SHIFT", 28),
            (30, G["string"]): ("SHIFT", 32),
            (30, G["true"]): ("SHIFT", 25),
            (30, G["int"]): ("SHIFT", 31),
            (30, G["("]): ("SHIFT", 11),
            (30, G["new"]): ("SHIFT", 22),
            (30, G["~"]): ("SHIFT", 27),
            (30, G["isvoid"]): ("SHIFT", 24),
            (31, G["."]): ("REDUCE", G["atom -> int"]),
            (31, G["else"]): ("REDUCE", G["atom -> int"]),
            (31, G["="]): ("REDUCE", G["atom -> int"]),
            (31, G[","]): ("REDUCE", G["atom -> int"]),
            (31, G["fi"]): ("REDUCE", G["atom -> int"]),
            (31, G["error"]): ("REDUCE", G["atom -> int"]),
            (31, G[";"]): ("REDUCE", G["atom -> int"]),
            (31, G["loop"]): ("REDUCE", G["atom -> int"]),
            (31, G["@"]): ("REDUCE", G["atom -> int"]),
            (31, G["pool"]): ("REDUCE", G["atom -> int"]),
            (31, G["+"]): ("REDUCE", G["atom -> int"]),
            (31, G["-"]): ("REDUCE", G["atom -> int"]),
            (31, G["in"]): ("REDUCE", G["atom -> int"]),
            (31, G["*"]): ("REDUCE", G["atom -> int"]),
            (31, G["}"]): ("REDUCE", G["atom -> int"]),
            (31, G["/"]): ("REDUCE", G["atom -> int"]),
            (31, G["of"]): ("REDUCE", G["atom -> int"]),
            (31, G["<"]): ("REDUCE", G["atom -> int"]),
            (31, G["<="]): ("REDUCE", G["atom -> int"]),
            (31, G[")"]): ("REDUCE", G["atom -> int"]),
            (31, G["then"]): ("REDUCE", G["atom -> int"]),
            (32, G["."]): ("REDUCE", G["atom -> string"]),
            (32, G["else"]): ("REDUCE", G["atom -> string"]),
            (32, G["="]): ("REDUCE", G["atom -> string"]),
            (32, G[","]): ("REDUCE", G["atom -> string"]),
            (32, G["fi"]): ("REDUCE", G["atom -> string"]),
            (32, G["error"]): ("REDUCE", G["atom -> string"]),
            (32, G[";"]): ("REDUCE", G["atom -> string"]),
            (32, G["loop"]): ("REDUCE", G["atom -> string"]),
            (32, G["@"]): ("REDUCE", G["atom -> string"]),
            (32, G["pool"]): ("REDUCE", G["atom -> string"]),
            (32, G["+"]): ("REDUCE", G["atom -> string"]),
            (32, G["-"]): ("REDUCE", G["atom -> string"]),
            (32, G["in"]): ("REDUCE", G["atom -> string"]),
            (32, G["*"]): ("REDUCE", G["atom -> string"]),
            (32, G["}"]): ("REDUCE", G["atom -> string"]),
            (32, G["/"]): ("REDUCE", G["atom -> string"]),
            (32, G["of"]): ("REDUCE", G["atom -> string"]),
            (32, G["<"]): ("REDUCE", G["atom -> string"]),
            (32, G["<="]): ("REDUCE", G["atom -> string"]),
            (32, G[")"]): ("REDUCE", G["atom -> string"]),
            (32, G["then"]): ("REDUCE", G["atom -> string"]),
            (33, G["."]): ("REDUCE", G["atom -> function-call"]),
            (33, G["else"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["="]): ("REDUCE", G["atom -> function-call"]),
            (33, G[","]): ("REDUCE", G["atom -> function-call"]),
            (33, G["fi"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["error"]): ("REDUCE", G["atom -> function-call"]),
            (33, G[";"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["loop"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["@"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["pool"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["+"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["-"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["in"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["*"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["}"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["/"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["of"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["<"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["<="]): ("REDUCE", G["atom -> function-call"]),
            (33, G[")"]): ("REDUCE", G["atom -> function-call"]),
            (33, G["then"]): ("REDUCE", G["atom -> function-call"]),
            (34, G["="]): ("SHIFT", 60),
            (34, G["<"]): ("SHIFT", 35),
            (34, G["else"]): ("REDUCE", G["negable -> not comp"]),
            (34, G[","]): ("REDUCE", G["negable -> not comp"]),
            (34, G["in"]): ("REDUCE", G["negable -> not comp"]),
            (34, G["fi"]): ("REDUCE", G["negable -> not comp"]),
            (34, G["}"]): ("REDUCE", G["negable -> not comp"]),
            (34, G["error"]): ("REDUCE", G["negable -> not comp"]),
            (34, G[";"]): ("REDUCE", G["negable -> not comp"]),
            (34, G["of"]): ("REDUCE", G["negable -> not comp"]),
            (34, G["loop"]): ("REDUCE", G["negable -> not comp"]),
            (34, G["pool"]): ("REDUCE", G["negable -> not comp"]),
            (34, G[")"]): ("REDUCE", G["negable -> not comp"]),
            (34, G["then"]): ("REDUCE", G["negable -> not comp"]),
            (34, G["<="]): ("SHIFT", 50),
            (35, G["not"]): ("SHIFT", 36),
            (35, G["false"]): ("SHIFT", 26),
            (35, G["if"]): ("SHIFT", 12),
            (35, G["id"]): ("SHIFT", 28),
            (35, G["string"]): ("SHIFT", 32),
            (35, G["true"]): ("SHIFT", 25),
            (35, G["int"]): ("SHIFT", 31),
            (35, G["("]): ("SHIFT", 11),
            (35, G["new"]): ("SHIFT", 22),
            (35, G["~"]): ("SHIFT", 27),
            (35, G["isvoid"]): ("SHIFT", 24),
            (36, G["false"]): ("SHIFT", 26),
            (36, G["if"]): ("SHIFT", 12),
            (36, G["id"]): ("SHIFT", 28),
            (36, G["string"]): ("SHIFT", 32),
            (36, G["true"]): ("SHIFT", 25),
            (36, G["int"]): ("SHIFT", 31),
            (36, G["("]): ("SHIFT", 11),
            (36, G["new"]): ("SHIFT", 22),
            (36, G["~"]): ("SHIFT", 27),
            (36, G["isvoid"]): ("SHIFT", 24),
            (37, G["+"]): ("SHIFT", 38),
            (37, G["-"]): ("SHIFT", 53),
            (37, G["else"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["="]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G[","]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["in"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["fi"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["}"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["error"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G[")"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G[";"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["of"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["<"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["loop"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["pool"]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["<="]): ("REDUCE", G["comp -> comp < not arith"]),
            (37, G["then"]): ("REDUCE", G["comp -> comp < not arith"]),
            (38, G["false"]): ("SHIFT", 26),
            (38, G["if"]): ("SHIFT", 12),
            (38, G["id"]): ("SHIFT", 28),
            (38, G["string"]): ("SHIFT", 32),
            (38, G["true"]): ("SHIFT", 25),
            (38, G["int"]): ("SHIFT", 31),
            (38, G["("]): ("SHIFT", 11),
            (38, G["new"]): ("SHIFT", 22),
            (38, G["~"]): ("SHIFT", 27),
            (38, G["isvoid"]): ("SHIFT", 24),
            (39, G["else"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["="]): ("REDUCE", G["arith -> arith + term"]),
            (39, G[","]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["fi"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["error"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G[";"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["loop"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["pool"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["+"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["-"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["in"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["}"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["of"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["<"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["<="]): ("REDUCE", G["arith -> arith + term"]),
            (39, G[")"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["then"]): ("REDUCE", G["arith -> arith + term"]),
            (39, G["/"]): ("SHIFT", 55),
            (39, G["*"]): ("SHIFT", 40),
            (40, G["false"]): ("SHIFT", 26),
            (40, G["if"]): ("SHIFT", 12),
            (40, G["id"]): ("SHIFT", 28),
            (40, G["string"]): ("SHIFT", 32),
            (40, G["true"]): ("SHIFT", 25),
            (40, G["int"]): ("SHIFT", 31),
            (40, G["("]): ("SHIFT", 11),
            (40, G["new"]): ("SHIFT", 22),
            (40, G["~"]): ("SHIFT", 27),
            (40, G["isvoid"]): ("SHIFT", 24),
            (41, G["else"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["="]): ("REDUCE", G["term -> term * factor"]),
            (41, G[","]): ("REDUCE", G["term -> term * factor"]),
            (41, G["fi"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["error"]): ("REDUCE", G["term -> term * factor"]),
            (41, G[";"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["loop"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["pool"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["+"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["-"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["in"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["*"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["}"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["/"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["of"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["<"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["<="]): ("REDUCE", G["term -> term * factor"]),
            (41, G[")"]): ("REDUCE", G["term -> term * factor"]),
            (41, G["then"]): ("REDUCE", G["term -> term * factor"]),
            (42, G["else"]): ("REDUCE", G["factor -> atom"]),
            (42, G["="]): ("REDUCE", G["factor -> atom"]),
            (42, G[","]): ("REDUCE", G["factor -> atom"]),
            (42, G["fi"]): ("REDUCE", G["factor -> atom"]),
            (42, G["error"]): ("REDUCE", G["factor -> atom"]),
            (42, G[";"]): ("REDUCE", G["factor -> atom"]),
            (42, G["loop"]): ("REDUCE", G["factor -> atom"]),
            (42, G["pool"]): ("REDUCE", G["factor -> atom"]),
            (42, G["+"]): ("REDUCE", G["factor -> atom"]),
            (42, G["-"]): ("REDUCE", G["factor -> atom"]),
            (42, G["in"]): ("REDUCE", G["factor -> atom"]),
            (42, G["*"]): ("REDUCE", G["factor -> atom"]),
            (42, G["}"]): ("REDUCE", G["factor -> atom"]),
            (42, G["/"]): ("REDUCE", G["factor -> atom"]),
            (42, G["of"]): ("REDUCE", G["factor -> atom"]),
            (42, G["<"]): ("REDUCE", G["factor -> atom"]),
            (42, G["<="]): ("REDUCE", G["factor -> atom"]),
            (42, G[")"]): ("REDUCE", G["factor -> atom"]),
            (42, G["then"]): ("REDUCE", G["factor -> atom"]),
            (42, G["@"]): ("SHIFT", 72),
            (42, G["."]): ("SHIFT", 43),
            (43, G["id"]): ("SHIFT", 44),
            (44, G["("]): ("SHIFT", 45),
            (45, G["string"]): ("SHIFT", 32),
            (45, G["id"]): ("SHIFT", 46),
            (45, G["("]): ("SHIFT", 11),
            (45, G["new"]): ("SHIFT", 22),
            (45, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (45, G["{"]): ("SHIFT", 10),
            (45, G["if"]): ("SHIFT", 12),
            (45, G["int"]): ("SHIFT", 31),
            (45, G["true"]): ("SHIFT", 25),
            (45, G["let"]): ("SHIFT", 14),
            (45, G["~"]): ("SHIFT", 27),
            (45, G["isvoid"]): ("SHIFT", 24),
            (45, G["while"]): ("SHIFT", 13),
            (45, G["case"]): ("SHIFT", 21),
            (45, G["not"]): ("SHIFT", 30),
            (45, G["false"]): ("SHIFT", 26),
            (46, G["("]): ("SHIFT", 29),
            (46, G["."]): ("REDUCE", G["atom -> id"]),
            (46, G["else"]): ("REDUCE", G["atom -> id"]),
            (46, G["="]): ("REDUCE", G["atom -> id"]),
            (46, G[","]): ("REDUCE", G["atom -> id"]),
            (46, G["fi"]): ("REDUCE", G["atom -> id"]),
            (46, G["error"]): ("REDUCE", G["atom -> id"]),
            (46, G[";"]): ("REDUCE", G["atom -> id"]),
            (46, G["loop"]): ("REDUCE", G["atom -> id"]),
            (46, G["@"]): ("REDUCE", G["atom -> id"]),
            (46, G["pool"]): ("REDUCE", G["atom -> id"]),
            (46, G["+"]): ("REDUCE", G["atom -> id"]),
            (46, G["-"]): ("REDUCE", G["atom -> id"]),
            (46, G["in"]): ("REDUCE", G["atom -> id"]),
            (46, G["*"]): ("REDUCE", G["atom -> id"]),
            (46, G["}"]): ("REDUCE", G["atom -> id"]),
            (46, G["/"]): ("REDUCE", G["atom -> id"]),
            (46, G["of"]): ("REDUCE", G["atom -> id"]),
            (46, G["<"]): ("REDUCE", G["atom -> id"]),
            (46, G["<="]): ("REDUCE", G["atom -> id"]),
            (46, G[")"]): ("REDUCE", G["atom -> id"]),
            (46, G["then"]): ("REDUCE", G["atom -> id"]),
            (46, G["<-"]): ("SHIFT", 47),
            (47, G["let"]): ("SHIFT", 14),
            (47, G["false"]): ("SHIFT", 26),
            (47, G["not"]): ("SHIFT", 30),
            (47, G["id"]): ("SHIFT", 46),
            (47, G["case"]): ("SHIFT", 21),
            (47, G["string"]): ("SHIFT", 32),
            (47, G["while"]): ("SHIFT", 13),
            (47, G["("]): ("SHIFT", 11),
            (47, G["new"]): ("SHIFT", 22),
            (47, G["~"]): ("SHIFT", 27),
            (47, G["isvoid"]): ("SHIFT", 24),
            (47, G["if"]): ("SHIFT", 12),
            (47, G["{"]): ("SHIFT", 10),
            (47, G["true"]): ("SHIFT", 25),
            (47, G["int"]): ("SHIFT", 31),
            (48, G["else"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G[","]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["in"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["fi"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["}"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["error"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G[")"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G[";"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["of"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["loop"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["pool"]): ("REDUCE", G["expr -> id <- expr"]),
            (48, G["then"]): ("REDUCE", G["expr -> id <- expr"]),
            (49, G["="]): ("SHIFT", 60),
            (49, G["<"]): ("SHIFT", 35),
            (49, G["else"]): ("REDUCE", G["negable -> comp"]),
            (49, G[","]): ("REDUCE", G["negable -> comp"]),
            (49, G["in"]): ("REDUCE", G["negable -> comp"]),
            (49, G["fi"]): ("REDUCE", G["negable -> comp"]),
            (49, G["}"]): ("REDUCE", G["negable -> comp"]),
            (49, G["error"]): ("REDUCE", G["negable -> comp"]),
            (49, G[")"]): ("REDUCE", G["negable -> comp"]),
            (49, G[";"]): ("REDUCE", G["negable -> comp"]),
            (49, G["of"]): ("REDUCE", G["negable -> comp"]),
            (49, G["loop"]): ("REDUCE", G["negable -> comp"]),
            (49, G["pool"]): ("REDUCE", G["negable -> comp"]),
            (49, G["then"]): ("REDUCE", G["negable -> comp"]),
            (49, G["<="]): ("SHIFT", 50),
            (50, G["false"]): ("SHIFT", 26),
            (50, G["if"]): ("SHIFT", 12),
            (50, G["id"]): ("SHIFT", 28),
            (50, G["string"]): ("SHIFT", 32),
            (50, G["true"]): ("SHIFT", 25),
            (50, G["int"]): ("SHIFT", 31),
            (50, G["("]): ("SHIFT", 11),
            (50, G["new"]): ("SHIFT", 22),
            (50, G["not"]): ("SHIFT", 51),
            (50, G["~"]): ("SHIFT", 27),
            (50, G["isvoid"]): ("SHIFT", 24),
            (51, G["false"]): ("SHIFT", 26),
            (51, G["if"]): ("SHIFT", 12),
            (51, G["id"]): ("SHIFT", 28),
            (51, G["string"]): ("SHIFT", 32),
            (51, G["true"]): ("SHIFT", 25),
            (51, G["int"]): ("SHIFT", 31),
            (51, G["("]): ("SHIFT", 11),
            (51, G["new"]): ("SHIFT", 22),
            (51, G["~"]): ("SHIFT", 27),
            (51, G["isvoid"]): ("SHIFT", 24),
            (52, G["+"]): ("SHIFT", 38),
            (52, G["-"]): ("SHIFT", 53),
            (52, G["else"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["="]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G[","]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["in"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["fi"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["}"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["error"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G[")"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G[";"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["of"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["<"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["loop"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["pool"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["<="]): ("REDUCE", G["comp -> comp <= not arith"]),
            (52, G["then"]): ("REDUCE", G["comp -> comp <= not arith"]),
            (53, G["false"]): ("SHIFT", 26),
            (53, G["if"]): ("SHIFT", 12),
            (53, G["id"]): ("SHIFT", 28),
            (53, G["string"]): ("SHIFT", 32),
            (53, G["true"]): ("SHIFT", 25),
            (53, G["int"]): ("SHIFT", 31),
            (53, G["("]): ("SHIFT", 11),
            (53, G["new"]): ("SHIFT", 22),
            (53, G["~"]): ("SHIFT", 27),
            (53, G["isvoid"]): ("SHIFT", 24),
            (54, G["else"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["="]): ("REDUCE", G["arith -> arith - term"]),
            (54, G[","]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["fi"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["error"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G[";"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["loop"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["pool"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["+"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["-"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["in"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["}"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["of"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["<"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["<="]): ("REDUCE", G["arith -> arith - term"]),
            (54, G[")"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["then"]): ("REDUCE", G["arith -> arith - term"]),
            (54, G["/"]): ("SHIFT", 55),
            (54, G["*"]): ("SHIFT", 40),
            (55, G["false"]): ("SHIFT", 26),
            (55, G["if"]): ("SHIFT", 12),
            (55, G["id"]): ("SHIFT", 28),
            (55, G["string"]): ("SHIFT", 32),
            (55, G["true"]): ("SHIFT", 25),
            (55, G["int"]): ("SHIFT", 31),
            (55, G["("]): ("SHIFT", 11),
            (55, G["new"]): ("SHIFT", 22),
            (55, G["~"]): ("SHIFT", 27),
            (55, G["isvoid"]): ("SHIFT", 24),
            (56, G["else"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["="]): ("REDUCE", G["term -> term / factor"]),
            (56, G[","]): ("REDUCE", G["term -> term / factor"]),
            (56, G["fi"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["error"]): ("REDUCE", G["term -> term / factor"]),
            (56, G[";"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["loop"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["pool"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["+"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["-"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["in"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["*"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["}"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["/"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["of"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["<"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["<="]): ("REDUCE", G["term -> term / factor"]),
            (56, G[")"]): ("REDUCE", G["term -> term / factor"]),
            (56, G["then"]): ("REDUCE", G["term -> term / factor"]),
            (57, G["else"]): ("REDUCE", G["term -> factor"]),
            (57, G["="]): ("REDUCE", G["term -> factor"]),
            (57, G[","]): ("REDUCE", G["term -> factor"]),
            (57, G["fi"]): ("REDUCE", G["term -> factor"]),
            (57, G["error"]): ("REDUCE", G["term -> factor"]),
            (57, G[";"]): ("REDUCE", G["term -> factor"]),
            (57, G["loop"]): ("REDUCE", G["term -> factor"]),
            (57, G["pool"]): ("REDUCE", G["term -> factor"]),
            (57, G["+"]): ("REDUCE", G["term -> factor"]),
            (57, G["-"]): ("REDUCE", G["term -> factor"]),
            (57, G["in"]): ("REDUCE", G["term -> factor"]),
            (57, G["*"]): ("REDUCE", G["term -> factor"]),
            (57, G["}"]): ("REDUCE", G["term -> factor"]),
            (57, G["/"]): ("REDUCE", G["term -> factor"]),
            (57, G["of"]): ("REDUCE", G["term -> factor"]),
            (57, G["<"]): ("REDUCE", G["term -> factor"]),
            (57, G["<="]): ("REDUCE", G["term -> factor"]),
            (57, G[")"]): ("REDUCE", G["term -> factor"]),
            (57, G["then"]): ("REDUCE", G["term -> factor"]),
            (58, G["else"]): ("REDUCE", G["arith -> term"]),
            (58, G["="]): ("REDUCE", G["arith -> term"]),
            (58, G[","]): ("REDUCE", G["arith -> term"]),
            (58, G["fi"]): ("REDUCE", G["arith -> term"]),
            (58, G["error"]): ("REDUCE", G["arith -> term"]),
            (58, G[";"]): ("REDUCE", G["arith -> term"]),
            (58, G["loop"]): ("REDUCE", G["arith -> term"]),
            (58, G["pool"]): ("REDUCE", G["arith -> term"]),
            (58, G["+"]): ("REDUCE", G["arith -> term"]),
            (58, G["-"]): ("REDUCE", G["arith -> term"]),
            (58, G["in"]): ("REDUCE", G["arith -> term"]),
            (58, G["}"]): ("REDUCE", G["arith -> term"]),
            (58, G["of"]): ("REDUCE", G["arith -> term"]),
            (58, G["<"]): ("REDUCE", G["arith -> term"]),
            (58, G["<="]): ("REDUCE", G["arith -> term"]),
            (58, G[")"]): ("REDUCE", G["arith -> term"]),
            (58, G["then"]): ("REDUCE", G["arith -> term"]),
            (58, G["/"]): ("SHIFT", 55),
            (58, G["*"]): ("SHIFT", 40),
            (59, G["+"]): ("SHIFT", 38),
            (59, G["-"]): ("SHIFT", 53),
            (59, G["else"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["="]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G[","]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["in"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["fi"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["}"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["<="]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["error"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G[";"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["of"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["<"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["loop"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["pool"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G[")"]): ("REDUCE", G["comp -> comp <= arith"]),
            (59, G["then"]): ("REDUCE", G["comp -> comp <= arith"]),
            (60, G["false"]): ("SHIFT", 26),
            (60, G["if"]): ("SHIFT", 12),
            (60, G["id"]): ("SHIFT", 28),
            (60, G["string"]): ("SHIFT", 32),
            (60, G["true"]): ("SHIFT", 25),
            (60, G["int"]): ("SHIFT", 31),
            (60, G["not"]): ("SHIFT", 61),
            (60, G["("]): ("SHIFT", 11),
            (60, G["new"]): ("SHIFT", 22),
            (60, G["~"]): ("SHIFT", 27),
            (60, G["isvoid"]): ("SHIFT", 24),
            (61, G["false"]): ("SHIFT", 26),
            (61, G["if"]): ("SHIFT", 12),
            (61, G["id"]): ("SHIFT", 28),
            (61, G["string"]): ("SHIFT", 32),
            (61, G["true"]): ("SHIFT", 25),
            (61, G["int"]): ("SHIFT", 31),
            (61, G["("]): ("SHIFT", 11),
            (61, G["new"]): ("SHIFT", 22),
            (61, G["~"]): ("SHIFT", 27),
            (61, G["isvoid"]): ("SHIFT", 24),
            (62, G["+"]): ("SHIFT", 38),
            (62, G["-"]): ("SHIFT", 53),
            (62, G["else"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["="]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G[","]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["in"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["fi"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["}"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["error"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G[")"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G[";"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["of"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["<"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["loop"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["pool"]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["<="]): ("REDUCE", G["comp -> comp = not arith"]),
            (62, G["then"]): ("REDUCE", G["comp -> comp = not arith"]),
            (63, G["+"]): ("SHIFT", 38),
            (63, G["-"]): ("SHIFT", 53),
            (63, G["else"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["="]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G[","]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["in"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["fi"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["}"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["<="]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["error"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G[";"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["of"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["<"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["loop"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["pool"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G[")"]): ("REDUCE", G["comp -> comp = arith"]),
            (63, G["then"]): ("REDUCE", G["comp -> comp = arith"]),
            (64, G["else"]): ("REDUCE", G["expr -> negable"]),
            (64, G[","]): ("REDUCE", G["expr -> negable"]),
            (64, G["in"]): ("REDUCE", G["expr -> negable"]),
            (64, G["fi"]): ("REDUCE", G["expr -> negable"]),
            (64, G["}"]): ("REDUCE", G["expr -> negable"]),
            (64, G["error"]): ("REDUCE", G["expr -> negable"]),
            (64, G[")"]): ("REDUCE", G["expr -> negable"]),
            (64, G[";"]): ("REDUCE", G["expr -> negable"]),
            (64, G["of"]): ("REDUCE", G["expr -> negable"]),
            (64, G["loop"]): ("REDUCE", G["expr -> negable"]),
            (64, G["pool"]): ("REDUCE", G["expr -> negable"]),
            (64, G["then"]): ("REDUCE", G["expr -> negable"]),
            (65, G["+"]): ("SHIFT", 38),
            (65, G["-"]): ("SHIFT", 53),
            (65, G["else"]): ("REDUCE", G["comp -> arith"]),
            (65, G["="]): ("REDUCE", G["comp -> arith"]),
            (65, G[","]): ("REDUCE", G["comp -> arith"]),
            (65, G["in"]): ("REDUCE", G["comp -> arith"]),
            (65, G["fi"]): ("REDUCE", G["comp -> arith"]),
            (65, G["}"]): ("REDUCE", G["comp -> arith"]),
            (65, G["error"]): ("REDUCE", G["comp -> arith"]),
            (65, G[")"]): ("REDUCE", G["comp -> arith"]),
            (65, G[";"]): ("REDUCE", G["comp -> arith"]),
            (65, G["of"]): ("REDUCE", G["comp -> arith"]),
            (65, G["loop"]): ("REDUCE", G["comp -> arith"]),
            (65, G["<="]): ("REDUCE", G["comp -> arith"]),
            (65, G["<"]): ("REDUCE", G["comp -> arith"]),
            (65, G["pool"]): ("REDUCE", G["comp -> arith"]),
            (65, G["then"]): ("REDUCE", G["comp -> arith"]),
            (66, G[")"]): ("SHIFT", 67),
            (67, G["."]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["else"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G[","]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["fi"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["error"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G[";"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["loop"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["@"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["pool"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["+"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["-"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["in"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["*"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["}"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["/"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["of"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["<"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["<="]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G[")"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (67, G["then"]): ("REDUCE", G["function-call -> atom . id ( expr-list )"]),
            (68, G[")"]): ("REDUCE", G["expr-list -> not-empty-expr-list"]),
            (69, G[")"]): ("REDUCE", G["not-empty-expr-list -> expr"]),
            (69, G[","]): ("SHIFT", 70),
            (70, G["string"]): ("SHIFT", 32),
            (70, G["id"]): ("SHIFT", 46),
            (70, G["("]): ("SHIFT", 11),
            (70, G["new"]): ("SHIFT", 22),
            (70, G["{"]): ("SHIFT", 10),
            (70, G["if"]): ("SHIFT", 12),
            (70, G["int"]): ("SHIFT", 31),
            (70, G["true"]): ("SHIFT", 25),
            (70, G["let"]): ("SHIFT", 14),
            (70, G["~"]): ("SHIFT", 27),
            (70, G["isvoid"]): ("SHIFT", 24),
            (70, G["while"]): ("SHIFT", 13),
            (70, G["case"]): ("SHIFT", 21),
            (70, G["not"]): ("SHIFT", 30),
            (70, G["false"]): ("SHIFT", 26),
            (71, G[")"]): ("REDUCE", G["not-empty-expr-list -> expr , not-empty-expr-list"]),
            (72, G["type"]): ("SHIFT", 73),
            (73, G["."]): ("SHIFT", 74),
            (74, G["id"]): ("SHIFT", 75),
            (75, G["("]): ("SHIFT", 76),
            (76, G["string"]): ("SHIFT", 32),
            (76, G["id"]): ("SHIFT", 46),
            (76, G["("]): ("SHIFT", 11),
            (76, G["new"]): ("SHIFT", 22),
            (76, G[")"]): ("REDUCE", G["expr-list -> e"]),
            (76, G["{"]): ("SHIFT", 10),
            (76, G["if"]): ("SHIFT", 12),
            (76, G["int"]): ("SHIFT", 31),
            (76, G["true"]): ("SHIFT", 25),
            (76, G["let"]): ("SHIFT", 14),
            (76, G["~"]): ("SHIFT", 27),
            (76, G["isvoid"]): ("SHIFT", 24),
            (76, G["while"]): ("SHIFT", 13),
            (76, G["case"]): ("SHIFT", 21),
            (76, G["not"]): ("SHIFT", 30),
            (76, G["false"]): ("SHIFT", 26),
            (77, G[")"]): ("SHIFT", 78),
            (78, G["."]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["else"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G[","]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["fi"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["error"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G[";"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["loop"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["@"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["pool"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["+"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["-"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["in"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["*"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["}"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["/"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["of"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["<"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["<="]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G[")"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (78, G["then"]): ("REDUCE", G["function-call -> atom @ type . id ( expr-list )"]),
            (79, G["else"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["="]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G[","]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["in"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["fi"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["}"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["<="]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["error"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G[";"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["of"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["<"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["loop"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["pool"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G[")"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["then"]): ("REDUCE", G["comp -> comp < arith"]),
            (79, G["+"]): ("SHIFT", 38),
            (79, G["-"]): ("SHIFT", 53),
            (80, G[")"]): ("SHIFT", 81),
            (81, G["."]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["else"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G[","]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["fi"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["error"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G[";"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["loop"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["@"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["pool"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["+"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["-"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["in"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["*"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["}"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["/"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["of"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["<"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["<="]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G[")"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (81, G["then"]): ("REDUCE", G["function-call -> id ( expr-list )"]),
            (82, G["else"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["="]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G[","]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["fi"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["error"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G[";"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["loop"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["pool"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["+"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["-"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["in"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["*"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["}"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["/"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["of"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["<"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["<="]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G[")"]): ("REDUCE", G["factor -> ~ factor"]),
            (82, G["then"]): ("REDUCE", G["factor -> ~ factor"]),
            (83, G["else"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["="]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G[","]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["fi"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["error"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G[";"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["loop"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["pool"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["+"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["-"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["in"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["*"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["}"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["/"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["of"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["<"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["<="]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G[")"]): ("REDUCE", G["factor -> isvoid factor"]),
            (83, G["then"]): ("REDUCE", G["factor -> isvoid factor"]),
            (84, G["of"]): ("SHIFT", 85),
            (85, G["id"]): ("SHIFT", 86),
            (86, G[":"]): ("SHIFT", 87),
            (87, G["type"]): ("SHIFT", 88),
            (88, G["=>"]): ("SHIFT", 89),
            (89, G["id"]): ("SHIFT", 46),
            (89, G["("]): ("SHIFT", 11),
            (89, G["new"]): ("SHIFT", 22),
            (89, G["~"]): ("SHIFT", 27),
            (89, G["{"]): ("SHIFT", 10),
            (89, G["isvoid"]): ("SHIFT", 24),
            (89, G["if"]): ("SHIFT", 12),
            (89, G["true"]): ("SHIFT", 25),
            (89, G["int"]): ("SHIFT", 31),
            (89, G["let"]): ("SHIFT", 14),
            (89, G["not"]): ("SHIFT", 30),
            (89, G["case"]): ("SHIFT", 21),
            (89, G["while"]): ("SHIFT", 13),
            (89, G["false"]): ("SHIFT", 26),
            (89, G["string"]): ("SHIFT", 32),
            (90, G[";"]): ("SHIFT", 91),
            (90, G["error"]): ("SHIFT", 93),
            (91, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ;"]),
            (91, G["id"]): ("SHIFT", 86),
            (92, G["esac"]): ("REDUCE", G["case-list -> id : type => expr ; case-list"]),
            (93, G["id"]): ("SHIFT", 86),
            (93, G["esac"]): ("REDUCE", G["case-list -> id : type => expr error"]),
            (94, G["esac"]): ("REDUCE", G["case-list -> id : type => expr error case-list"]),
            (95, G["esac"]): ("SHIFT", 96),
            (96, G["else"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G[","]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G["in"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G["fi"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G["}"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G["error"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G[")"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G[";"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G["of"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G["loop"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G["pool"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (96, G["then"]): ("REDUCE", G["expr -> case expr of case-list esac"]),
            (97, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr"]),
            (97, G[","]): ("SHIFT", 98),
            (98, G["id"]): ("SHIFT", 15),
            (99, G["in"]): ("REDUCE", G["declaration-list -> id : type <- expr , declaration-list"]),
            (100, G["in"]): ("SHIFT", 101),
            (101, G["let"]): ("SHIFT", 14),
            (101, G["false"]): ("SHIFT", 26),
            (101, G["not"]): ("SHIFT", 30),
            (101, G["id"]): ("SHIFT", 46),
            (101, G["case"]): ("SHIFT", 21),
            (101, G["string"]): ("SHIFT", 32),
            (101, G["while"]): ("SHIFT", 13),
            (101, G["("]): ("SHIFT", 11),
            (101, G["new"]): ("SHIFT", 22),
            (101, G["~"]): ("SHIFT", 27),
            (101, G["isvoid"]): ("SHIFT", 24),
            (101, G["if"]): ("SHIFT", 12),
            (101, G["{"]): ("SHIFT", 10),
            (101, G["true"]): ("SHIFT", 25),
            (101, G["int"]): ("SHIFT", 31),
            (102, G["else"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G[","]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G["in"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G["fi"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G["}"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G["error"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G[";"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G["of"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G["loop"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G["pool"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G[")"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (102, G["then"]): ("REDUCE", G["expr -> let declaration-list in expr"]),
            (103, G["loop"]): ("SHIFT", 104),
            (104, G["case"]): ("SHIFT", 21),
            (104, G["new"]): ("SHIFT", 22),
            (104, G["not"]): ("SHIFT", 30),
            (104, G["("]): ("SHIFT", 11),
            (104, G["while"]): ("SHIFT", 13),
            (104, G["if"]): ("SHIFT", 12),
            (104, G["true"]): ("SHIFT", 25),
            (104, G["int"]): ("SHIFT", 31),
            (104, G["{"]): ("SHIFT", 10),
            (104, G["let"]): ("SHIFT", 14),
            (104, G["id"]): ("SHIFT", 46),
            (104, G["~"]): ("SHIFT", 27),
            (104, G["isvoid"]): ("SHIFT", 24),
            (104, G["false"]): ("SHIFT", 26),
            (104, G["string"]): ("SHIFT", 32),
            (105, G["pool"]): ("SHIFT", 106),
            (106, G["else"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G[","]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G["in"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G["fi"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G["}"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G["error"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G[")"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G[";"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G["of"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G["loop"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G["pool"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (106, G["then"]): ("REDUCE", G["expr -> while expr loop expr pool"]),
            (107, G["then"]): ("SHIFT", 108),
            (108, G["not"]): ("SHIFT", 30),
            (108, G["case"]): ("SHIFT", 21),
            (108, G["false"]): ("SHIFT", 26),
            (108, G["id"]): ("SHIFT", 46),
            (108, G["~"]): ("SHIFT", 27),
            (108, G["while"]): ("SHIFT", 13),
            (108, G["string"]): ("SHIFT", 32),
            (108, G["isvoid"]): ("SHIFT", 24),
            (108, G["new"]): ("SHIFT", 22),
            (108, G["("]): ("SHIFT", 11),
            (108, G["{"]): ("SHIFT", 10),
            (108, G["if"]): ("SHIFT", 12),
            (108, G["true"]): ("SHIFT", 25),
            (108, G["int"]): ("SHIFT", 31),
            (108, G["let"]): ("SHIFT", 14),
            (109, G["else"]): ("SHIFT", 110),
            (110, G["id"]): ("SHIFT", 46),
            (110, G["("]): ("SHIFT", 11),
            (110, G["new"]): ("SHIFT", 22),
            (110, G["~"]): ("SHIFT", 27),
            (110, G["{"]): ("SHIFT", 10),
            (110, G["isvoid"]): ("SHIFT", 24),
            (110, G["if"]): ("SHIFT", 12),
            (110, G["int"]): ("SHIFT", 31),
            (110, G["true"]): ("SHIFT", 25),
            (110, G["let"]): ("SHIFT", 14),
            (110, G["case"]): ("SHIFT", 21),
            (110, G["not"]): ("SHIFT", 30),
            (110, G["while"]): ("SHIFT", 13),
            (110, G["false"]): ("SHIFT", 26),
            (110, G["string"]): ("SHIFT", 32),
            (111, G["fi"]): ("SHIFT", 112),
            (112, G["."]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["else"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["="]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G[","]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["fi"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["error"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G[";"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["loop"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["@"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["pool"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["+"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["-"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["in"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["*"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["}"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["/"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["of"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["<"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["<="]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G[")"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (112, G["then"]): ("REDUCE", G["atom -> if expr then expr else expr fi"]),
            (113, G[")"]): ("SHIFT", 114),
            (114, G["."]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["else"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["="]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G[","]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["fi"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["error"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G[";"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["loop"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["@"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["pool"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["+"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["-"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["in"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["*"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["}"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["/"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["of"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["<"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["<="]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G[")"]): ("REDUCE", G["atom -> ( expr )"]),
            (114, G["then"]): ("REDUCE", G["atom -> ( expr )"]),
            (115, G["}"]): ("SHIFT", 116),
            (116, G["else"]): ("REDUCE", G["expr -> { block }"]),
            (116, G[","]): ("REDUCE", G["expr -> { block }"]),
            (116, G["in"]): ("REDUCE", G["expr -> { block }"]),
            (116, G["fi"]): ("REDUCE", G["expr -> { block }"]),
            (116, G["}"]): ("REDUCE", G["expr -> { block }"]),
            (116, G["error"]): ("REDUCE", G["expr -> { block }"]),
            (116, G[")"]): ("REDUCE", G["expr -> { block }"]),
            (116, G[";"]): ("REDUCE", G["expr -> { block }"]),
            (116, G["of"]): ("REDUCE", G["expr -> { block }"]),
            (116, G["loop"]): ("REDUCE", G["expr -> { block }"]),
            (116, G["pool"]): ("REDUCE", G["expr -> { block }"]),
            (116, G["then"]): ("REDUCE", G["expr -> { block }"]),
            (117, G[";"]): ("SHIFT", 118),
            (117, G["error"]): ("SHIFT", 120),
            (118, G["id"]): ("SHIFT", 46),
            (118, G["("]): ("SHIFT", 11),
            (118, G["new"]): ("SHIFT", 22),
            (118, G["~"]): ("SHIFT", 27),
            (118, G["{"]): ("SHIFT", 10),
            (118, G["isvoid"]): ("SHIFT", 24),
            (118, G["if"]): ("SHIFT", 12),
            (118, G["true"]): ("SHIFT", 25),
            (118, G["int"]): ("SHIFT", 31),
            (118, G["let"]): ("SHIFT", 14),
            (118, G["not"]): ("SHIFT", 30),
            (118, G["case"]): ("SHIFT", 21),
            (118, G["}"]): ("REDUCE", G["block -> expr ;"]),
            (118, G["while"]): ("SHIFT", 13),
            (118, G["false"]): ("SHIFT", 26),
            (118, G["string"]): ("SHIFT", 32),
            (119, G["}"]): ("REDUCE", G["block -> expr ; block"]),
            (120, G["id"]): ("SHIFT", 46),
            (120, G["("]): ("SHIFT", 11),
            (120, G["new"]): ("SHIFT", 22),
            (120, G["~"]): ("SHIFT", 27),
            (120, G["{"]): ("SHIFT", 10),
            (120, G["isvoid"]): ("SHIFT", 24),
            (120, G["if"]): ("SHIFT", 12),
            (120, G["}"]): ("REDUCE", G["block -> expr error"]),
            (120, G["true"]): ("SHIFT", 25),
            (120, G["int"]): ("SHIFT", 31),
            (120, G["let"]): ("SHIFT", 14),
            (120, G["not"]): ("SHIFT", 30),
            (120, G["case"]): ("SHIFT", 21),
            (120, G["while"]): ("SHIFT", 13),
            (120, G["false"]): ("SHIFT", 26),
            (120, G["string"]): ("SHIFT", 32),
            (121, G["}"]): ("REDUCE", G["block -> expr error block"]),
            (122, G["}"]): ("SHIFT", 123),
            (123, G["error"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (123, G[";"]): ("REDUCE", G["method -> id ( ) : type { expr }"]),
            (124, G[":"]): ("SHIFT", 125),
            (125, G["type"]): ("SHIFT", 126),
            (126, G[","]): ("SHIFT", 127),
            (126, G[")"]): ("REDUCE", G["param-list -> id : type"]),
            (127, G["id"]): ("SHIFT", 124),
            (128, G[")"]): ("REDUCE", G["param-list -> id : type , param-list"]),
            (129, G[")"]): ("SHIFT", 130),
            (130, G[":"]): ("SHIFT", 131),
            (131, G["type"]): ("SHIFT", 132),
            (132, G["{"]): ("SHIFT", 133),
            (133, G["true"]): ("SHIFT", 25),
            (133, G["case"]): ("SHIFT", 21),
            (133, G["not"]): ("SHIFT", 30),
            (133, G["while"]): ("SHIFT", 13),
            (133, G["false"]): ("SHIFT", 26),
            (133, G["id"]): ("SHIFT", 46),
            (133, G["string"]): ("SHIFT", 32),
            (133, G["("]): ("SHIFT", 11),
            (133, G["new"]): ("SHIFT", 22),
            (133, G["{"]): ("SHIFT", 10),
            (133, G["~"]): ("SHIFT", 27),
            (133, G["isvoid"]): ("SHIFT", 24),
            (133, G["if"]): ("SHIFT", 12),
            (133, G["int"]): ("SHIFT", 31),
            (133, G["let"]): ("SHIFT", 14),
            (134, G["}"]): ("SHIFT", 135),
            (135, G["error"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (135, G[";"]): ("REDUCE", G["method -> id ( param-list ) : type { expr }"]),
            (136, G["type"]): ("SHIFT", 137),
            (137, G["<-"]): ("SHIFT", 138),
            (137, G["error"]): ("REDUCE", G["attribute -> id : type"]),
            (137, G[";"]): ("REDUCE", G["attribute -> id : type"]),
            (138, G["id"]): ("SHIFT", 46),
            (138, G["("]): ("SHIFT", 11),
            (138, G["new"]): ("SHIFT", 22),
            (138, G["string"]): ("SHIFT", 32),
            (138, G["~"]): ("SHIFT", 27),
            (138, G["{"]): ("SHIFT", 10),
            (138, G["isvoid"]): ("SHIFT", 24),
            (138, G["if"]): ("SHIFT", 12),
            (138, G["true"]): ("SHIFT", 25),
            (138, G["int"]): ("SHIFT", 31),
            (138, G["let"]): ("SHIFT", 14),
            (138, G["not"]): ("SHIFT", 30),
            (138, G["case"]): ("SHIFT", 21),
            (138, G["while"]): ("SHIFT", 13),
            (138, G["false"]): ("SHIFT", 26),
            (139, G["error"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (139, G[";"]): ("REDUCE", G["attribute -> id : type <- expr"]),
            (140, G["}"]): ("SHIFT", 141),
            (141, G[";"]): ("REDUCE", G["class-def -> class type { feature-list }"]),
            (142, G[";"]): ("SHIFT", 143),
            (142, G["error"]): ("SHIFT", 150),
            (143, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (143, G["id"]): ("SHIFT", 4),
            (144, G["}"]): ("REDUCE", G["feature-list -> attribute ; feature-list"]),
            (145, G[";"]): ("SHIFT", 146),
            (145, G["error"]): ("SHIFT", 148),
            (146, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (146, G["id"]): ("SHIFT", 4),
            (147, G["}"]): ("REDUCE", G["feature-list -> method ; feature-list"]),
            (148, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (148, G["id"]): ("SHIFT", 4),
            (149, G["}"]): ("REDUCE", G["feature-list -> method error feature-list"]),
            (150, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (150, G["id"]): ("SHIFT", 4),
            (151, G["}"]): ("REDUCE", G["feature-list -> attribute error feature-list"]),
            (152, G["type"]): ("SHIFT", 153),
            (153, G["{"]): ("SHIFT", 154),
            (154, G["}"]): ("REDUCE", G["feature-list -> e"]),
            (154, G["id"]): ("SHIFT", 4),
            (155, G["}"]): ("SHIFT", 156),
            (156, G[";"]): ("REDUCE", G["class-def -> class type inherits type { feature-list }"]),
            (157, G["$"]): ("OK", None),
            (158, G["$"]): ("REDUCE", G["program -> class-list"]),
            (159, G[";"]): ("SHIFT", 160),
            (160, G["class"]): ("SHIFT", 1),
            (160, G["$"]): ("REDUCE", G["class-list -> class-def ;"]),
            (161, G["$"]): ("REDUCE", G["class-list -> class-def ; class-list"]),
        }

    @staticmethod
    def __goto_table():
        return {
            (0, G["class-list"]): 158,
            (0, G["class-def"]): 159,
            (0, G["program"]): 157,
            (3, G["method"]): 145,
            (3, G["attribute"]): 142,
            (3, G["feature-list"]): 140,
            (5, G["param-list"]): 129,
            (9, G["arith"]): 65,
            (9, G["atom"]): 42,
            (9, G["term"]): 58,
            (9, G["function-call"]): 33,
            (9, G["comp"]): 49,
            (9, G["factor"]): 57,
            (9, G["expr"]): 122,
            (9, G["negable"]): 64,
            (10, G["function-call"]): 33,
            (10, G["factor"]): 57,
            (10, G["arith"]): 65,
            (10, G["block"]): 115,
            (10, G["comp"]): 49,
            (10, G["atom"]): 42,
            (10, G["expr"]): 117,
            (10, G["term"]): 58,
            (10, G["negable"]): 64,
            (11, G["comp"]): 49,
            (11, G["atom"]): 42,
            (11, G["term"]): 58,
            (11, G["arith"]): 65,
            (11, G["factor"]): 57,
            (11, G["negable"]): 64,
            (11, G["expr"]): 113,
            (11, G["function-call"]): 33,
            (12, G["comp"]): 49,
            (12, G["function-call"]): 33,
            (12, G["expr"]): 107,
            (12, G["atom"]): 42,
            (12, G["term"]): 58,
            (12, G["arith"]): 65,
            (12, G["negable"]): 64,
            (12, G["factor"]): 57,
            (13, G["atom"]): 42,
            (13, G["term"]): 58,
            (13, G["comp"]): 49,
            (13, G["arith"]): 65,
            (13, G["factor"]): 57,
            (13, G["function-call"]): 33,
            (13, G["negable"]): 64,
            (13, G["expr"]): 103,
            (14, G["declaration-list"]): 100,
            (18, G["declaration-list"]): 19,
            (20, G["arith"]): 65,
            (20, G["comp"]): 49,
            (20, G["expr"]): 97,
            (20, G["factor"]): 57,
            (20, G["negable"]): 64,
            (20, G["atom"]): 42,
            (20, G["term"]): 58,
            (20, G["function-call"]): 33,
            (21, G["term"]): 58,
            (21, G["comp"]): 49,
            (21, G["function-call"]): 33,
            (21, G["atom"]): 42,
            (21, G["arith"]): 65,
            (21, G["expr"]): 84,
            (21, G["negable"]): 64,
            (21, G["factor"]): 57,
            (24, G["atom"]): 42,
            (24, G["factor"]): 83,
            (24, G["function-call"]): 33,
            (27, G["factor"]): 82,
            (27, G["atom"]): 42,
            (27, G["function-call"]): 33,
            (29, G["comp"]): 49,
            (29, G["atom"]): 42,
            (29, G["expr-list"]): 80,
            (29, G["function-call"]): 33,
            (29, G["expr"]): 69,
            (29, G["term"]): 58,
            (29, G["factor"]): 57,
            (29, G["negable"]): 64,
            (29, G["not-empty-expr-list"]): 68,
            (29, G["arith"]): 65,
            (30, G["comp"]): 34,
            (30, G["term"]): 58,
            (30, G["arith"]): 65,
            (30, G["atom"]): 42,
            (30, G["factor"]): 57,
            (30, G["function-call"]): 33,
            (35, G["term"]): 58,
            (35, G["arith"]): 79,
            (35, G["atom"]): 42,
            (35, G["factor"]): 57,
            (35, G["function-call"]): 33,
            (36, G["term"]): 58,
            (36, G["arith"]): 37,
            (36, G["atom"]): 42,
            (36, G["factor"]): 57,
            (36, G["function-call"]): 33,
            (38, G["term"]): 39,
            (38, G["atom"]): 42,
            (38, G["factor"]): 57,
            (38, G["function-call"]): 33,
            (40, G["factor"]): 41,
            (40, G["atom"]): 42,
            (40, G["function-call"]): 33,
            (45, G["comp"]): 49,
            (45, G["atom"]): 42,
            (45, G["function-call"]): 33,
            (45, G["expr"]): 69,
            (45, G["term"]): 58,
            (45, G["expr-list"]): 66,
            (45, G["factor"]): 57,
            (45, G["negable"]): 64,
            (45, G["not-empty-expr-list"]): 68,
            (45, G["arith"]): 65,
            (47, G["comp"]): 49,
            (47, G["arith"]): 65,
            (47, G["term"]): 58,
            (47, G["factor"]): 57,
            (47, G["function-call"]): 33,
            (47, G["atom"]): 42,
            (47, G["expr"]): 48,
            (47, G["negable"]): 64,
            (50, G["term"]): 58,
            (50, G["arith"]): 59,
            (50, G["atom"]): 42,
            (50, G["factor"]): 57,
            (50, G["function-call"]): 33,
            (51, G["term"]): 58,
            (51, G["arith"]): 52,
            (51, G["atom"]): 42,
            (51, G["factor"]): 57,
            (51, G["function-call"]): 33,
            (53, G["term"]): 54,
            (53, G["atom"]): 42,
            (53, G["factor"]): 57,
            (53, G["function-call"]): 33,
            (55, G["factor"]): 56,
            (55, G["atom"]): 42,
            (55, G["function-call"]): 33,
            (60, G["term"]): 58,
            (60, G["arith"]): 63,
            (60, G["atom"]): 42,
            (60, G["factor"]): 57,
            (60, G["function-call"]): 33,
            (61, G["term"]): 58,
            (61, G["arith"]): 62,
            (61, G["atom"]): 42,
            (61, G["factor"]): 57,
            (61, G["function-call"]): 33,
            (70, G["comp"]): 49,
            (70, G["atom"]): 42,
            (70, G["function-call"]): 33,
            (70, G["expr"]): 69,
            (70, G["term"]): 58,
            (70, G["factor"]): 57,
            (70, G["negable"]): 64,
            (70, G["arith"]): 65,
            (70, G["not-empty-expr-list"]): 71,
            (76, G["comp"]): 49,
            (76, G["atom"]): 42,
            (76, G["function-call"]): 33,
            (76, G["expr-list"]): 77,
            (76, G["expr"]): 69,
            (76, G["term"]): 58,
            (76, G["factor"]): 57,
            (76, G["negable"]): 64,
            (76, G["not-empty-expr-list"]): 68,
            (76, G["arith"]): 65,
            (85, G["case-list"]): 95,
            (89, G["function-call"]): 33,
            (89, G["factor"]): 57,
            (89, G["arith"]): 65,
            (89, G["comp"]): 49,
            (89, G["atom"]): 42,
            (89, G["term"]): 58,
            (89, G["expr"]): 90,
            (89, G["negable"]): 64,
            (91, G["case-list"]): 92,
            (93, G["case-list"]): 94,
            (98, G["declaration-list"]): 99,
            (101, G["comp"]): 49,
            (101, G["arith"]): 65,
            (101, G["term"]): 58,
            (101, G["factor"]): 57,
            (101, G["function-call"]): 33,
            (101, G["atom"]): 42,
            (101, G["expr"]): 102,
            (101, G["negable"]): 64,
            (104, G["atom"]): 42,
            (104, G["term"]): 58,
            (104, G["arith"]): 65,
            (104, G["comp"]): 49,
            (104, G["factor"]): 57,
            (104, G["negable"]): 64,
            (104, G["expr"]): 105,
            (104, G["function-call"]): 33,
            (108, G["comp"]): 49,
            (108, G["factor"]): 57,
            (108, G["expr"]): 109,
            (108, G["term"]): 58,
            (108, G["function-call"]): 33,
            (108, G["arith"]): 65,
            (108, G["atom"]): 42,
            (108, G["negable"]): 64,
            (110, G["factor"]): 57,
            (110, G["comp"]): 49,
            (110, G["arith"]): 65,
            (110, G["atom"]): 42,
            (110, G["term"]): 58,
            (110, G["expr"]): 111,
            (110, G["negable"]): 64,
            (110, G["function-call"]): 33,
            (118, G["function-call"]): 33,
            (118, G["factor"]): 57,
            (118, G["arith"]): 65,
            (118, G["comp"]): 49,
            (118, G["atom"]): 42,
            (118, G["expr"]): 117,
            (118, G["term"]): 58,
            (118, G["block"]): 119,
            (118, G["negable"]): 64,
            (120, G["function-call"]): 33,
            (120, G["factor"]): 57,
            (120, G["arith"]): 65,
            (120, G["comp"]): 49,
            (120, G["atom"]): 42,
            (120, G["expr"]): 117,
            (120, G["term"]): 58,
            (120, G["negable"]): 64,
            (120, G["block"]): 121,
            (127, G["param-list"]): 128,
            (133, G["arith"]): 65,
            (133, G["atom"]): 42,
            (133, G["term"]): 58,
            (133, G["function-call"]): 33,
            (133, G["comp"]): 49,
            (133, G["factor"]): 57,
            (133, G["expr"]): 134,
            (133, G["negable"]): 64,
            (138, G["function-call"]): 33,
            (138, G["factor"]): 57,
            (138, G["arith"]): 65,
            (138, G["comp"]): 49,
            (138, G["atom"]): 42,
            (138, G["term"]): 58,
            (138, G["expr"]): 139,
            (138, G["negable"]): 64,
            (143, G["method"]): 145,
            (143, G["attribute"]): 142,
            (143, G["feature-list"]): 144,
            (146, G["method"]): 145,
            (146, G["attribute"]): 142,
            (146, G["feature-list"]): 147,
            (148, G["method"]): 145,
            (148, G["attribute"]): 142,
            (148, G["feature-list"]): 149,
            (150, G["method"]): 145,
            (150, G["attribute"]): 142,
            (150, G["feature-list"]): 151,
            (154, G["method"]): 145,
            (154, G["attribute"]): 142,
            (154, G["feature-list"]): 155,
            (160, G["class-list"]): 161,
            (160, G["class-def"]): 159,
        }
